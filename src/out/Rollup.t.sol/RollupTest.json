{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEVELS",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIFESPAN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "N",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollup",
      "outputs": [
        {
          "internalType": "contract Rollup",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stateTree",
      "outputs": [
        {
          "internalType": "contract MerkleTreeWithHistoryMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[4]",
          "name": "tos",
          "type": "address[4]"
        },
        {
          "internalType": "uint32[4]",
          "name": "values",
          "type": "uint32[4]"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[4]",
          "name": "froms",
          "type": "address[4]"
        },
        {
          "internalType": "address[4]",
          "name": "tos",
          "type": "address[4]"
        },
        {
          "internalType": "uint256[4]",
          "name": "values",
          "type": "uint256[4]"
        }
      ],
      "name": "testRollup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "230:30288:12:-:0;;;1572:26:0;;;-1:-1:-1;;;;1572:26:0;;;1594:4;1572:26;170:28:1;;;;;230:30288:12;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "230:30288:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:22431;;;:::i;:::-;;419:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;321:38:1;;;:::i;22905:272:12:-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;;;;;:::i;346:40:12:-;;;:::i;:::-;;;;;;;:::i;303:37::-;;;:::i;393:20::-;;;:::i;264:33::-;;;:::i;:::-;;;;;;;:::i;23183:6021::-;;;;;;:::i;:::-;;:::i;170:28:1:-;;;:::i;1572:26:0:-;;;:::i;468:22431:12:-;502:33;:22135;;;;;;;;;;;;;;;;;;;22648:12;22736:8;22730:15;22725:2;22715:8;22711:17;22708:1;22701:45;22693:53;;381:5;22786:15;:26;296:1;22822:4;22775:52;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;22766:6;;:61;;;;;-1:-1:-1;;;;;22766:61:12;;;;;-1:-1:-1;;;;;22766:61:12;;;;;;296:1;22887:4;22849:43;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22837:9:12;:55;;-1:-1:-1;;;;;;22837:55:12;-1:-1:-1;;;;;22837:55:12;;;;;;;;;;-1:-1:-1;;468:22431:12:o;419:42::-;;;-1:-1:-1;;;;;419:42:12;;:::o;321:38:1:-;-1:-1:-1;;;;;;;;;;;321:38:1;:::o;22905:272:12:-;23012:9;23007:164;331:9;23023:5;;23007:164;;;-1:-1:-1;;;;;;;;;;;23049:7:12;23057:3;23061:1;23057:6;;;;;;;;;;;;;;;;;;:::i;:::-;23065:16;23049:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;23096:8:12;;-1:-1:-1;23105:3:12;;-1:-1:-1;23109:1:12;23105:6;;;;;;;;;;;;;;;;;;:::i;:::-;23096:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23126:6:12;;-1:-1:-1;;;;;23126:6:12;;-1:-1:-1;23126:14:12;;-1:-1:-1;23148:6:12;23155:1;23148:9;;;;;;;;;;;;;;;;;;:::i;:::-;23126:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23030:3:12;;;;;-1:-1:-1;23007:164:12;;-1:-1:-1;;23007:164:12;;;22905:272;;:::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;1896:14;;1869:528;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;;;;;-1:-1:-1;;;2196:43:0;;;;;;;;;;;;;1679:55;2196:43;;;;;-1:-1:-1;;;2086:175:0;;;;;;;;2023:20;;1671:64;;2135:34;;2196:43;2086:175;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:232;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2047:232:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;;;;-1:-1:-1;2312:27:0;;-1:-1:-1;;1980:374:0;2374:12;-1:-1:-1;1869:528:0;1819:584;:::o;346:40:12:-;381:5;346:40;:::o;303:37::-;331:9;303:37;:::o;393:20::-;;;-1:-1:-1;;;;;393:20:12;;:::o;264:33::-;296:1;264:33;:::o;23183:6021::-;23329:9;23324:85;331:9;23340:5;;23324:85;;;-1:-1:-1;;;;;;;;;;;23366:9:12;23388;23376:6;23383:1;23376:9;;;;;;;;;;;:21;23366:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23347:3:12;;;;;-1:-1:-1;23324:85:12;;-1:-1:-1;23324:85:12;;;23419:29;;:::i;:::-;23463:9;23458:2149;331:9;23478:5;;23458:2149;;;-1:-1:-1;;;;;;;;;;;23504:7:12;23512:3;23516:1;23512:6;;;;;;;;;;;23520:16;23504:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23552:21;23587:23;23629:9;23624:1409;331:9;23644:5;;23624:1409;;;23745:9;23767:3;23771:1;23767:6;;;;;;;;;;;-1:-1:-1;;;;;23757:16:12;:3;23761:1;23757:6;;;;;;;;;;;-1:-1:-1;;;;;23757:16:12;;23745:28;;23791:11;23815:5;23821:1;23815:8;;;;;;;;;;;-1:-1:-1;;;;;23805:18:12;:3;23809:1;23805:6;;;;;;;;;;;-1:-1:-1;;;;;23805:18:12;;23791:32;;23984:1;23980;:5;:26;;24005:1;23980:26;;;23989:4;:12;;24000:1;23989:12;;;23996:1;23989:12;23963:43;;;;;;;24038:18;;24093:5;;;:28;;24120:1;24093:28;;;24102:6;:14;;24115:1;24102:14;;;24111:1;24102:14;24074:47;;;;;;;24155:20;;24139:13;;24221:216;24242:1;24237;:6;24221:216;;24272:9;24296:3;24300:1;24296:6;;;;;;;;;;;-1:-1:-1;;;;;24284:18:12;:5;24290:1;24284:8;;;;;;;;;;;-1:-1:-1;;;;;24284:18:12;;24272:30;;24329:4;24325:94;;;24370:1;24366;:5;:30;;24395:1;24366:30;;;24374:8;24383:1;24374:11;;;;;;;;;;;24390:1;24386;:5;24374:18;;;;;;;;;;;24366:30;24361:35;;;;24325:94;-1:-1:-1;24245:3:12;;24221:216;;;;24528:26;24557:6;:34;;;;;24587:4;24557:34;:100;;;;-1:-1:-1;24636:1:12;24616:5;24622:1;24616:8;;;;;;;;;;;-1:-1:-1;;;;;24616:22:12;;:40;;;;24647:6;24654:1;24647:9;;;;;;;;;;;24642:1;:14;;24616:40;24528:129;;24675:26;24704:8;:38;;;;;24736:6;24704:38;:89;;;;;24784:6;24791:1;24784:9;;;;;;;;;;;24766:8;24775:1;24766:11;;;;;;;;;;;24778:1;24766:14;;;;;;;;;;;:27;;24704:89;24675:118;;24816:21;24812:95;;;24879:6;24886:1;24879:9;;;;;;;;;;;24861:8;24870:1;24861:11;;;;;;;;;;;24873:1;24861:14;;;;;;;;;;:27;;;;;;;24812:95;24928:21;24924:95;;;24991:6;24998:1;24991:9;;;;;;;;;;;24973:8;24982:1;24973:11;;;;;;;;;;;24985:1;24973:14;;;;;;;;;;:27;;;;;;;;24924:95;-1:-1:-1;;23651:3:12;;;;;-1:-1:-1;23624:1409:12;;-1:-1:-1;;;;23624:1409:12;;;25047:31;25056:8;25065:1;25056:11;;;;;;;;;;;:18;;;25076:1;25047:8;:31::i;:::-;25093:9;;25172:18;;;-1:-1:-1;;;25172:18:12;;;;-1:-1:-1;;;;;25093:9:12;;;;:16;;:9;;25127:23;;25093:9;;25172:16;;:18;;;;;;;;;;;;;;;25093:9;25172:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25228:3;25232:1;25228:6;;;;;;;;;;;-1:-1:-1;;;;;25220:15:12;25266:8;25275:1;25266:11;;;;;;;;;;;:18;;;25127:176;;;;;;-1:-1:-1;;;;;;25127:176:12;;;;;;;25266:18;25127:176;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25093:224;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25356:1;-1:-1:-1;;;;;25336:22:12;:5;25342:1;25336:8;;;;;;;;;;;-1:-1:-1;;;;;25336:22:12;;25332:265;;;-1:-1:-1;;;;;;;;;;;25378:8:12;25387:3;25391:1;25387:6;;;;;;;;;;;25378:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25412:6:12;;-1:-1:-1;;;;;25412:6:12;;-1:-1:-1;25412:14:12;;-1:-1:-1;25434:6:12;25441:1;25434:9;;;;;;;;;;;25412:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25332:265;;;-1:-1:-1;;;;;;;;;;;25485:8:12;25494:5;25500:1;25494:8;;;;;;;;;;;25485:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25521:6:12;;-1:-1:-1;;;;;25521:6:12;;-1:-1:-1;25521:15:12;;-1:-1:-1;25553:3:12;25557:1;25553:6;;;;;;;;;;;-1:-1:-1;;;;;25545:15:12;25571:6;25578:1;25571:9;;;;;;;;;;;25521:61;;-1:-1:-1;;;;;;25521:61:12;;;;;;;;;;25571:9;25521:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25332:265;-1:-1:-1;;23485:3:12;;23458:2149;;;-1:-1:-1;25662:33:12;;-1:-1:-1;;;25662:33:12;;-1:-1:-1;;;;;;;;;;;250:64:1;25662:15:12;;:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25705:6;;;;;;;;;-1:-1:-1;;;;;25705:6:12;-1:-1:-1;;;;;25705:14:12;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25786:9;25781:397;331:9;25797:5;;25781:397;;;25855:21;;;296:1;25855:21;;;;;;;;25823:29;;25855:21;;;;;;;;-1:-1:-1;;25918:18:12;;;296:1;25918:18;;;;;;;;25823:53;;-1:-1:-1;25890:25:12;;25918:18;;-1:-1:-1;296:1:12;25918:18;;;;;;;;-1:-1:-1;;25951:54:12;;-1:-1:-1;;;25951:54:12;;25890:46;;-1:-1:-1;;;;;;;;;;;;250:64:1;25951:15:12;;-1:-1:-1;25951:54:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26019:6:12;;-1:-1:-1;;;;;26019:6:12;;-1:-1:-1;26019:15:12;;-1:-1:-1;26052:3:12;26056:1;26052:6;;;;;;;;;;;26076:8;26085:1;26076:11;;;;;;;;;;;:18;;;26019:148;;-1:-1:-1;;;;;;26019:148:12;;;;;;;;;;26076:18;26112:12;;26142:11;;26019:148;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25804:3:12;;;;;-1:-1:-1;25781:397:12;;-1:-1:-1;;;25781:397:12;;-1:-1:-1;26270:9:12;;:23;;;-1:-1:-1;;;26270:23:12;;;;26255:12;;-1:-1:-1;;;;;26270:9:12;;:21;;:23;;;;;;;;;;;;;;:9;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26308:66;;-1:-1:-1;;;26308:66:12;;26255:38;;-1:-1:-1;;;;;;;;;;;;250:64:1;26308:15:12;;:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26388:6:12;;:24;;-1:-1:-1;;;26388:24:12;;-1:-1:-1;;;;;26388:6:12;;;;-1:-1:-1;26388:14:12;;-1:-1:-1;26388:24:12;;26403:4;;26388:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26433:40:12;;-1:-1:-1;;;26433:40:12;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;26433:7:12;;-1:-1:-1;26433:40:12;;-1:-1:-1;26441:31:12;:15;:31;;26433:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26552:9;26547:175;331:9;26563:5;;26547:175;;;-1:-1:-1;;;;;;;;;;;26589:8:12;26598:3;26602:1;26598:6;;;;;;;;;;;26589:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26619:62:12;;-1:-1:-1;;;26619:62:12;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;26619:15:12;;-1:-1:-1;26619:62:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26695:6;;;;;;;;;-1:-1:-1;;;;;26695:6:12;-1:-1:-1;;;;;26695:14:12;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26570:3:12;;;;;-1:-1:-1;26547:175:12;;-1:-1:-1;26547:175:12;;;26785:9;26780:222;331:9;26796:5;;26780:222;;;-1:-1:-1;;;;;;;;;;;26822:8:12;26831:5;26837:1;26831:8;;;;;;;;;;;26822:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26854:62:12;;-1:-1:-1;;;26854:62:12;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;26854:15:12;;-1:-1:-1;26854:62:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26930:6:12;;-1:-1:-1;;;;;26930:6:12;;-1:-1:-1;26930:15:12;;-1:-1:-1;26962:3:12;26966:1;26962:6;;;;;;;;;;;-1:-1:-1;;;;;26954:15:12;26980:6;26987:1;26980:9;;;;;;;;;;;26930:61;;-1:-1:-1;;;;;;26930:61:12;;;;;;;;;;26980:9;26930:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26803:3:12;;;;;-1:-1:-1;26780:222:12;;-1:-1:-1;26780:222:12;;-1:-1:-1;27104:9:12;;:23;;;-1:-1:-1;;;27104:23:12;;;;27089:12;;-1:-1:-1;;;;;27104:9:12;;:21;;:23;;;;;;;;;;;;;;:9;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27142:44;;-1:-1:-1;;;27142:44:12;;27089:38;;-1:-1:-1;;;;;;;;;;;;250:64:1;27142:15:12;;:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27200:6:12;;:24;;-1:-1:-1;;;27200:24:12;;-1:-1:-1;;;;;27200:6:12;;;;-1:-1:-1;27200:14:12;;-1:-1:-1;27200:24:12;;27215:4;;27200:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23183:6021;27289:18;27310:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;27289:38;;27342:18;27363:6;-1:-1:-1;;;;;27363:16:12;;27380:5;27387:3;27392:6;27363:36;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27363:36:12;;;;;;;;;;;;:::i;:::-;27414:6;;27429:9;;:23;;;-1:-1:-1;;;27429:23:12;;;;27342:57;;-1:-1:-1;;;;;;27414:6:12;;;;:14;;27429:9;;;;:21;;:23;;;;;;;;;;;;;;;:9;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27454:5;27414:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23183:6021;;27562:9;27557:397;331:9;27573:5;;27557:397;;;27631:21;;;296:1;27631:21;;;;;;;;27599:29;;27631:21;;;;;;;;-1:-1:-1;;27694:18:12;;;296:1;27694:18;;;;;;;;27599:53;;-1:-1:-1;27666:25:12;;27694:18;;-1:-1:-1;296:1:12;27694:18;;;;;;;;-1:-1:-1;;27727:54:12;;-1:-1:-1;;;27727:54:12;;27666:46;;-1:-1:-1;;;;;;;;;;;;250:64:1;27727:15:12;;-1:-1:-1;27727:54:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27795:6:12;;-1:-1:-1;;;;;27795:6:12;;-1:-1:-1;27795:15:12;;-1:-1:-1;27828:3:12;27832:1;27828:6;;;;;;;;;;;27852:8;27861:1;27852:11;;;;;;;;;;;:18;;;27795:148;;-1:-1:-1;;;;;;27795:148:12;;;;;;;;;;27852:18;27888:12;;27918:11;;27795:148;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27580:3:12;;;;;-1:-1:-1;27557:397:12;;-1:-1:-1;;;27557:397:12;;-1:-1:-1;28046:21:12;;;296:1;28046:21;;;;;;;;28014:29;;28046:21;;;;;;;;-1:-1:-1;;28109:18:12;;;296:1;28109:18;;;;;;;;28014:53;;-1:-1:-1;28081:25:12;;28109:18;;-1:-1:-1;296:1:12;28109:18;;;;;;;;-1:-1:-1;;28160:9:12;;28201:18;;;-1:-1:-1;;;28201:18:12;;;;28081:46;;-1:-1:-1;;;;;;28160:9:12;;;;:23;;-1:-1:-1;28160:9:12;;28201:16;;:18;;;;;;;;;;;;;;28160:9;28201:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28253:6;;;;;28287:11;;;;:18;;;28160:160;;;;;;-1:-1:-1;;;;;;28160:160:12;;;;;;-1:-1:-1;;;;;28245:15:12;;28287:18;28160:160;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28142:12;28155:1;28142:15;;;;;;;;;;;;;:178;;;;;28335:30;28415:1;28434:9;;;;;;;;;-1:-1:-1;;;;;28434:9:12;-1:-1:-1;;;;;28434:16:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28368:98;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28510:9:12;;28555:18;;;-1:-1:-1;;;28555:18:12;;;;28335:131;;-1:-1:-1;;;;;;28481:11:12;;;;;;28510:9;;;;:23;;:9;;28555:16;;:18;;;;;;;;;;;;;;28510:9;28555:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28611:6;;;;;28649:11;;;;:18;;;28510:176;;;;;;-1:-1:-1;;;;;;28510:176:12;;;;;;-1:-1:-1;;;;;28603:15:12;;;;28649:18;28510:176;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28481:219;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28744:9:12;;28789:18;;;-1:-1:-1;;;28789:18:12;;;;-1:-1:-1;;;;;28715:11:12;;;;-1:-1:-1;28715:11:12;;-1:-1:-1;28744:9:12;;;;:23;;:9;;28789:16;;:18;;;;;;;;;;;;;;;28744:9;28789:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28845:6;;;;;28883:11;;;;:18;;;;28744:176;;;;;;-1:-1:-1;;;;;;28744:176:12;;;;;;-1:-1:-1;;;;;28837:15:12;;28883:18;28744:176;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28715:219;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28967:4;-1:-1:-1;;;;;28967:16:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28949:12;28962:1;28949:15;;;;;;;;;;;;;;;;;:36;29014:6;;29000:25;;-1:-1:-1;;;29000:25:12;;-1:-1:-1;;;;;;;;;;;250:64:1;29000:13:12;;:25;;29014:6;29000:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29039:6:12;;29072;;29096:11;;:18;;;29039:148;;-1:-1:-1;;;29039:148:12;;-1:-1:-1;;;;;29039:6:12;;;;-1:-1:-1;29039:15:12;;-1:-1:-1;29039:148:12;;29132:12;;29162:11;;29039:148;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23183:6021;;;;;;;:::o;170:28:1:-;;;;;;;;;:::o;1572:26:0:-;;;;;;:::o;2840:242::-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;;2840:242;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5346:31;;;;;;;;;;;;;;;;;-1:-1:-1;;;5346:31:0;;;;;;;;;;;;;;;5396;;;;;;;;;;;;;;;;;-1:-1:-1;;;5396:31:0;;;;;;;;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2449:16;:14;:16::i;:::-;2445:359;;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;;;;;-1:-1:-1;;;2645:67:0;;;;2705:4;1679:55;2645:67;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2534:196:0;;;;;;;;2482:11;;1671:64;;2579:43;;2645:67;2534:196;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:245;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2499:245:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:165:13:-;113:6;146:3;134:16;;131:25;-1:-1:-1;128:2:13;;;169:1;166;159:12;128:2;91:88;;;;:::o;184:777::-;;292:3;285:4;277:6;273:17;269:27;259:2;;314:5;307;300:20;259:2;351;345:9;393:3;385:6;381:16;463:6;451:10;448:22;427:18;415:10;412:34;409:62;406:2;;;474:9;406:2;501;494:22;536:6;562;595:3;583:16;;580:25;-1:-1:-1;577:2:13;;;622:5;615;608:20;577:2;648:5;662:269;676:4;673:1;670:11;662:269;;;749:3;736:17;766:33;793:5;766:33;:::i;:::-;812:18;;853:4;877:12;;;;909;;;;;696:1;689:9;662:269;;;-1:-1:-1;949:6:13;;249:712;-1:-1:-1;;;;;249:712:13:o;966:259::-;;1078:2;1066:9;1057:7;1053:23;1049:32;1046:2;;;1099:6;1091;1084:22;1046:2;1143:9;1130:23;1162:33;1189:5;1162:33;:::i;:::-;1214:5;1036:189;-1:-1:-1;;;1036:189:13:o;1230:379::-;;;1408:3;1396:9;1387:7;1383:23;1379:33;1376:2;;;1430:6;1422;1415:22;1376:2;1458:58;1508:7;1497:9;1458:58;:::i;:::-;1448:68;;1535;1595:7;1589:3;1578:9;1574:19;1535:68;:::i;:::-;1525:78;;1366:243;;;;;:::o;1614:1078::-;;;;1807:3;1851:2;1839:9;1830:7;1826:23;1822:32;1819:2;;;1872:6;1864;1857:22;1819:2;1900:49;1941:7;1930:9;1900:49;:::i;:::-;1890:59;;1968;2019:7;2013:3;2002:9;1998:19;1968:59;:::i;:::-;1958:69;;2071:7;2065:3;2054:9;2050:19;2046:33;2036:2;;2098:6;2090;2083:22;2036:2;2136;2130:9;2178:3;2170:6;2166:16;2248:6;2236:10;2233:22;2212:18;2200:10;2197:34;2194:62;2191:2;;;2259:9;2191:2;2286;2279:22;2321:6;2362:3;2347:19;;2381:18;;;2378:31;-1:-1:-1;2375:2:13;;;2427:6;2419;2412:22;2375:2;2454:6;2445:15;;2469:192;2483:4;2480:1;2477:11;2469:192;;;2542:17;;2530:30;;2503:1;2496:9;;;;;2583:4;2607:12;;;;2639;2469:192;;;2473:3;;2680:6;2670:16;;;;1787:905;;;;;:::o;2697:194::-;;2820:2;2808:9;2799:7;2795:23;2791:32;2788:2;;;2841:6;2833;2826:22;2788:2;-1:-1:-1;2869:16:13;;2778:113;-1:-1:-1;2778:113:13:o;2896:875::-;;3028:2;3016:9;3007:7;3003:23;2999:32;2996:2;;;3049:6;3041;3034:22;2996:2;3087:9;3081:16;3116:18;3157:2;3149:6;3146:14;3143:2;;;3178:6;3170;3163:22;3143:2;3221:6;3210:9;3206:22;3196:32;;3266:7;3259:4;3255:2;3251:13;3247:27;3237:2;;3293:6;3285;3278:22;3237:2;3327;3321:9;3349:2;3345;3342:10;3339:2;;;3355:9;3339:2;3395;3389:9;3464:2;3445:13;;-1:-1:-1;;3441:27:13;3429:40;;3471:2;3425:49;3489:18;;;3509:22;;;3486:46;3483:2;;;3535:9;3483:2;3562;3555:22;3586:18;;;3623:11;;;3636:2;3619:20;3616:33;-1:-1:-1;3613:2:13;;;3667:6;3659;3652:22;3613:2;3685:55;3737:2;3732;3724:6;3720:15;3715:2;3711;3707:11;3685:55;:::i;:::-;3759:6;2986:785;-1:-1:-1;;;;;;2986:785:13:o;3776:280::-;;3916:2;3904:9;3895:7;3891:23;3887:32;3884:2;;;3937:6;3929;3922:22;3884:2;3974:9;3968:16;3993:33;4020:5;3993:33;:::i;4061:296::-;;4172:2;4160:9;4151:7;4147:23;4143:32;4140:2;;;4193:6;4185;4178:22;4140:2;4237:9;4224:23;4287:10;4280:5;4276:22;4269:5;4266:33;4256:2;;4318:6;4310;4303:22;4362:357;4460:5;4483:1;4493:220;4507:4;4504:1;4501:11;4493:220;;;4570:13;;-1:-1:-1;;;;;4566:39:13;4554:52;;4629:4;4653:12;;;;4688:15;;;;4602:1;4520:9;4493:220;;;4497:3;;4417:302;;:::o;4724:203::-;-1:-1:-1;;;;;4888:32:13;;;;4870:51;;4858:2;4843:18;;4825:102::o;4932:383::-;-1:-1:-1;;;;;5161:32:13;;;;5143:51;;5230:2;5225;5210:18;;5203:30;;;4932:383;5249:18;;;5242:32;5306:2;5291:18;;5133:182::o;5320:1337::-;-1:-1:-1;;;;;5669:32:13;;5651:51;;5721:2;5739:18;;;5732:34;;;5638:3;5797:2;5782:18;;5775:31;;;5855:13;;5623:19;;;5877:22;;;5320:1337;;5957:15;;;;5689:3;5915:19;;;5320:1337;6003:169;6017:6;6014:1;6011:13;6003:169;;;6078:13;;6066:26;;6147:15;;;;6112:12;;;;6039:1;6032:9;6003:169;;;-1:-1:-1;;6208:19:13;;;6203:2;6188:18;;6181:47;6278:13;;6300:21;;;6339:12;;;;-1:-1:-1;6376:15:13;;;;6411:4;6424:205;6440:8;6435:3;6432:17;6424:205;;;6523:15;;6516:23;6509:31;6495:46;;6563:14;;;;6602:17;;;;6468:1;6459:11;6424:205;;;-1:-1:-1;6646:5:13;;5599:1058;-1:-1:-1;;;;;;;;;5599:1058:13:o;6662:290::-;-1:-1:-1;;;;;6853:32:13;;;;6835:51;;6934:10;6922:23;6917:2;6902:18;;6895:51;6823:2;6808:18;;6790:162::o;6957:771::-;7285:3;7270:19;;7298:48;7274:9;7328:6;7298:48;:::i;:::-;7355:58;7408:3;7397:9;7393:19;7385:6;7355:58;:::i;:::-;7448:3;7437:9;7433:19;7494:6;7518:1;7528:194;7542:4;7539:1;7536:11;7528:194;;;7601:13;;7589:26;;7638:4;7662:12;;;;7697:15;;;;7562:1;7555:9;7528:194;;;7532:3;;;7252:476;;;;;;:::o;7733:187::-;7898:14;;7891:22;7873:41;;7861:2;7846:18;;7828:92::o;7925:177::-;8071:25;;;8059:2;8044:18;;8026:76::o;8107:248::-;8281:25;;;8337:2;8322:18;;8315:34;8269:2;8254:18;;8236:119::o;8360:452::-;;8535:6;8524:9;8517:25;8578:2;8573;8562:9;8558:18;8551:30;8610:6;8604:13;8653:6;8648:2;8637:9;8633:18;8626:34;8669:66;8728:6;8723:2;8712:9;8708:18;8703:2;8695:6;8691:15;8669:66;:::i;:::-;8796:2;8775:15;-1:-1:-1;;8771:29:13;8756:45;;;;8803:2;8752:54;;8507:305;-1:-1:-1;;;8507:305:13:o;8817:357::-;9028:25;;;9089:2;9084;9069:18;;9062:30;;;8817:357;9108:18;;;9101:32;9165:2;9150:18;;9018:156::o;9179:362::-;-1:-1:-1;;;;;9416:32:13;;;;9398:51;;9480:2;9465:18;;9458:34;;;;9523:2;9508:18;;9501:34;9386:2;9371:18;;9353:188::o;10232:315::-;10460:10;10448:23;;;;10430:42;;-1:-1:-1;;;;;10508:32:13;10503:2;10488:18;;10481:60;10418:2;10403:18;;10385:162::o;10552:410::-;10753:2;10735:21;;;10792:2;10772:18;;;10765:30;10831:34;10826:2;10811:18;;10804:62;-1:-1:-1;;;10897:2:13;10882:18;;10875:45;10952:3;10937:19;;10725:237::o;10967:348::-;11168:2;11150:21;;;11207:2;11187:18;;;11180:30;11246:27;11241:2;11226:18;;11219:55;11306:2;11291:18;;11140:175::o;11320:337::-;11521:2;11503:21;;;11560:2;11540:18;;;11533:30;-1:-1:-1;;;11594:2:13;11579:18;;11572:44;11648:2;11633:18;;11493:164::o;11662:406::-;11863:2;11845:21;;;11902:2;11882:18;;;11875:30;11941:34;11936:2;11921:18;;11914:62;-1:-1:-1;;;12007:2:13;11992:18;;11985:41;12058:3;12043:19;;11835:233::o;12073:398::-;12274:2;12256:21;;;12313:2;12293:18;;;12286:30;12352:34;12347:2;12332:18;;12325:62;-1:-1:-1;;;12418:2:13;12403:18;;12396:33;12461:3;12446:19;;12246:225::o;12658:377::-;12875:25;;;12948:10;12936:23;;;;12931:2;12916:18;;12909:51;-1:-1:-1;;;;;12996:32:13;12991:2;12976:18;;12969:60;12863:2;12848:18;;12830:205::o;13040:192::-;13214:10;13202:23;;;;13184:42;;13172:2;13157:18;;13139:93::o;13548:258::-;13620:1;13630:113;13644:6;13641:1;13638:13;13630:113;;;13720:11;;;13714:18;13701:11;;;13694:39;13666:2;13659:10;13630:113;;;13761:6;13758:1;13755:13;13752:2;;;-1:-1:-1;;13796:1:13;13778:16;;13771:27;13601:205::o;13811:133::-;-1:-1:-1;;;;;13888:31:13;;13878:42;;13868:2;;13934:1;13931;13924:12;13868:2;13858:86;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "LEVELS()": "e2adba8c",
    "LIFESPAN()": "bffb1468",
    "N()": "c9e525df",
    "failed()": "ba414fa6",
    "rollup()": "cb23bcb5",
    "setUp()": "0a9254e4",
    "stateTree()": "18b14277",
    "testDeposit(address[4],uint32[4])": "b9ebbabc",
    "testRollup(address[4],address[4],uint256[4])": "ef311d12",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEVELS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIFESPAN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"N\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollup\",\"outputs\":[{\"internalType\":\"contract Rollup\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stateTree\",\"outputs\":[{\"internalType\":\"contract MerkleTreeWithHistoryMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[4]\",\"name\":\"tos\",\"type\":\"address[4]\"},{\"internalType\":\"uint32[4]\",\"name\":\"values\",\"type\":\"uint32[4]\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[4]\",\"name\":\"froms\",\"type\":\"address[4]\"},{\"internalType\":\"address[4]\",\"name\":\"tos\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[4]\",\"name\":\"values\",\"type\":\"uint256[4]\"}],\"name\":\"testRollup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Rollup.t.sol\":\"RollupTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":tornado-core/=lib/tornado-core/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/tornado-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x0f93f0c0eb5fb955dbc5dd631987498d3bc4a38e88290b24919e2182ba681bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2892acda30d2fa76cf6a594ab49b415cf6efd83b702386a630f213a676b567a\",\"dweb:/ipfs/QmUjF4raiyWBSKG7pf5y2SEMy6TJ8Rpnj5ti5JSYnHD1R2\"]},\"lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":{\"keccak256\":\"0x7a07cd2eb7531ae3977bc46b7392cef73d323478c0119ab2c4561325d46b9d31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd29860549b60580bcaae0612bc341c5c0a423f199e24eefe1bc54037367ddb9\",\"dweb:/ipfs/QmVU6W8JRd6EATrgt6gHeDoU2hwDv1NGsfv34JrEpdnEGv\"]},\"src/PlonkVerifier.sol\":{\"keccak256\":\"0xcf16269927ae2ba8d76b5bf7452a2288aaa2da982261a120c51f9a71d8b05488\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fe31ebf5dd2b5018584b172ded8fcbf3fd15daf67d86555beaa09f27ee08e4ee\",\"dweb:/ipfs/QmXMSitGzv5qw3i1MySLM1kRkC1r3ANq52rf4L344jS9Af\"]},\"src/Rollup.sol\":{\"keccak256\":\"0x7ed585848143619ff99ccfcb0fb6fd02e037a00dfe7798bda663cebb4ff4e26b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63889670b5435a377832fc0827455e2721f014431000875b71d8dd88c4bd817a\",\"dweb:/ipfs/QmXpmaYK3oNCnnmLUHdmMQr7xdZsqprHELRSSrUFtFvvG8\"]},\"test/PlonkProver.sol\":{\"keccak256\":\"0x1c1d65b1306b8c9978ba8ef171c7a0b616df8e460dc583717aacfed061748d40\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1f7e6c555a2eac853700ba186b7451757510598057676b8c5fb02c1cdc755c0e\",\"dweb:/ipfs/QmUdU5pPQMRcWxy1kUSgiYA72zKCrR2wtMCsN8SxFt4bRv\"]},\"test/Rollup.t.sol\":{\"keccak256\":\"0x24ccd843ee88c6eb0da3235a98d92af65b03c686a912ec70f7b6a162418c15bf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c54aec2f373af29368eb8771c8f6c959bc0d21892d288e399d93b6eb1e45aa34\",\"dweb:/ipfs/Qmd2QuUUsDE1Mr5pV7rH9dq6ydmwa7KeGdEx4kYdMYMZ5h\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEVELS",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LIFESPAN",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "N",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rollup",
          "outputs": [
            {
              "internalType": "contract Rollup",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stateTree",
          "outputs": [
            {
              "internalType": "contract MerkleTreeWithHistoryMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[4]",
              "name": "tos",
              "type": "address[4]"
            },
            {
              "internalType": "uint32[4]",
              "name": "values",
              "type": "uint32[4]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address[4]",
              "name": "froms",
              "type": "address[4]"
            },
            {
              "internalType": "address[4]",
              "name": "tos",
              "type": "address[4]"
            },
            {
              "internalType": "uint256[4]",
              "name": "values",
              "type": "uint256[4]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRollup"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":tornado-core/=lib/tornado-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Rollup.t.sol": "RollupTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/tornado-core/contracts/MerkleTreeWithHistory.sol": {
        "keccak256": "0x0f93f0c0eb5fb955dbc5dd631987498d3bc4a38e88290b24919e2182ba681bb7",
        "urls": [
          "bzz-raw://c2892acda30d2fa76cf6a594ab49b415cf6efd83b702386a630f213a676b567a",
          "dweb:/ipfs/QmUjF4raiyWBSKG7pf5y2SEMy6TJ8Rpnj5ti5JSYnHD1R2"
        ],
        "license": "MIT"
      },
      "lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol": {
        "keccak256": "0x7a07cd2eb7531ae3977bc46b7392cef73d323478c0119ab2c4561325d46b9d31",
        "urls": [
          "bzz-raw://dd29860549b60580bcaae0612bc341c5c0a423f199e24eefe1bc54037367ddb9",
          "dweb:/ipfs/QmVU6W8JRd6EATrgt6gHeDoU2hwDv1NGsfv34JrEpdnEGv"
        ],
        "license": "MIT"
      },
      "src/PlonkVerifier.sol": {
        "keccak256": "0xcf16269927ae2ba8d76b5bf7452a2288aaa2da982261a120c51f9a71d8b05488",
        "urls": [
          "bzz-raw://fe31ebf5dd2b5018584b172ded8fcbf3fd15daf67d86555beaa09f27ee08e4ee",
          "dweb:/ipfs/QmXMSitGzv5qw3i1MySLM1kRkC1r3ANq52rf4L344jS9Af"
        ],
        "license": "GPL-3.0"
      },
      "src/Rollup.sol": {
        "keccak256": "0x7ed585848143619ff99ccfcb0fb6fd02e037a00dfe7798bda663cebb4ff4e26b",
        "urls": [
          "bzz-raw://63889670b5435a377832fc0827455e2721f014431000875b71d8dd88c4bd817a",
          "dweb:/ipfs/QmXpmaYK3oNCnnmLUHdmMQr7xdZsqprHELRSSrUFtFvvG8"
        ],
        "license": "UNLICENSED"
      },
      "test/PlonkProver.sol": {
        "keccak256": "0x1c1d65b1306b8c9978ba8ef171c7a0b616df8e460dc583717aacfed061748d40",
        "urls": [
          "bzz-raw://1f7e6c555a2eac853700ba186b7451757510598057676b8c5fb02c1cdc755c0e",
          "dweb:/ipfs/QmUdU5pPQMRcWxy1kUSgiYA72zKCrR2wtMCsN8SxFt4bRv"
        ],
        "license": "UNLICENSED"
      },
      "test/Rollup.t.sol": {
        "keccak256": "0x24ccd843ee88c6eb0da3235a98d92af65b03c686a912ec70f7b6a162418c15bf",
        "urls": [
          "bzz-raw://c54aec2f373af29368eb8771c8f6c959bc0d21892d288e399d93b6eb1e45aa34",
          "dweb:/ipfs/Qmd2QuUUsDE1Mr5pV7rH9dq6ydmwa7KeGdEx4kYdMYMZ5h"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Rollup.t.sol",
    "id": 25707,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "IHasher": [
        23149
      ],
      "MerkleTreeWithHistory": [
        23804
      ],
      "MerkleTreeWithHistoryMock": [
        23832
      ],
      "PlonkProver": [
        24815
      ],
      "PlonkVerifier": [
        24063
      ],
      "Rollup": [
        24542
      ],
      "RollupTest": [
        25706
      ],
      "Script": [
        2048
      ],
      "StdStorage": [
        5027
      ],
      "Test": [
        4929
      ],
      "Vm": [
        7007
      ],
      "console": [
        15071
      ],
      "console2": [
        23135
      ],
      "stdError": [
        4999
      ],
      "stdJson": [
        2407
      ],
      "stdMath": [
        6242
      ],
      "stdStorage": [
        6103
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:30480:12",
    "nodes": [
      {
        "id": 24817,
        "nodeType": "PragmaDirective",
        "src": "39:24:12",
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ]
      },
      {
        "id": 24818,
        "nodeType": "PragmaDirective",
        "src": "64:19:12",
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 24819,
        "nodeType": "ImportDirective",
        "src": "85:28:12",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "scope": 25707,
        "sourceUnit": 6243,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24820,
        "nodeType": "ImportDirective",
        "src": "114:58:12",
        "absolutePath": "lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
        "file": "tornado-core/Mocks/MerkleTreeWithHistoryMock.sol",
        "scope": 25707,
        "sourceUnit": 23833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24821,
        "nodeType": "ImportDirective",
        "src": "173:27:12",
        "absolutePath": "test/PlonkProver.sol",
        "file": "./PlonkProver.sol",
        "scope": 25707,
        "sourceUnit": 24816,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24822,
        "nodeType": "ImportDirective",
        "src": "201:27:12",
        "absolutePath": "src/Rollup.sol",
        "file": "../src/Rollup.sol",
        "scope": 25707,
        "sourceUnit": 24543,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25706,
        "nodeType": "ContractDefinition",
        "src": "230:30288:12",
        "nodes": [
          {
            "id": 24827,
            "nodeType": "VariableDeclaration",
            "src": "264:33:12",
            "constant": true,
            "functionSelector": "e2adba8c",
            "mutability": "constant",
            "name": "LEVELS",
            "scope": 25706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 24825,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "264:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 24826,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "296:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "id": 24832,
            "nodeType": "VariableDeclaration",
            "src": "303:37:12",
            "constant": true,
            "functionSelector": "c9e525df",
            "mutability": "constant",
            "name": "N",
            "scope": 25706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24828,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 24831,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 24829,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "331:1:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "id": 24830,
                "name": "LEVELS",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 24827,
                "src": "334:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "src": "331:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24835,
            "nodeType": "VariableDeclaration",
            "src": "346:40:12",
            "constant": true,
            "functionSelector": "bffb1468",
            "mutability": "constant",
            "name": "LIFESPAN",
            "scope": 25706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24833,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 24834,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "381:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "id": 24837,
            "nodeType": "VariableDeclaration",
            "src": "393:20:12",
            "constant": false,
            "functionSelector": "cb23bcb5",
            "mutability": "mutable",
            "name": "rollup",
            "scope": 25706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Rollup_$24542",
              "typeString": "contract Rollup"
            },
            "typeName": {
              "id": 24836,
              "name": "Rollup",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24542,
              "src": "393:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Rollup_$24542",
                "typeString": "contract Rollup"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24839,
            "nodeType": "VariableDeclaration",
            "src": "419:42:12",
            "constant": false,
            "functionSelector": "18b14277",
            "mutability": "mutable",
            "name": "stateTree",
            "scope": 25706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
              "typeString": "contract MerkleTreeWithHistoryMock"
            },
            "typeName": {
              "id": 24838,
              "name": "MerkleTreeWithHistoryMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23832,
              "src": "419:25:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                "typeString": "contract MerkleTreeWithHistoryMock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24871,
            "nodeType": "FunctionDefinition",
            "src": "468:22431:12",
            "body": {
              "id": 24870,
              "nodeType": "Block",
              "src": "492:22407:12",
              "statements": [
                {
                  "assignments": [
                    24843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24843,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 24870,
                      "src": "502:33:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 24842,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "502:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24845,
                  "initialValue": {
                    "hexValue": "",
                    "id": 24844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "hexString",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "538:22099:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_458c251d2198ce810a017bdf38500a919fc76524f1cf53db24aecbf0e86564d4",
                      "typeString": "literal_string hex\"\""
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "502:22135:12"
                },
                {
                  "assignments": [
                    24847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24847,
                      "mutability": "mutable",
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 24870,
                      "src": "22648:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHasher_$23149",
                        "typeString": "contract IHasher"
                      },
                      "typeName": {
                        "id": 24846,
                        "name": "IHasher",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 23149,
                        "src": "22648:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHasher_$23149",
                          "typeString": "contract IHasher"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24848,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22648:12:12"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "22679:77:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "22693:53:12",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22708:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "22715:8:12"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22725:2:12",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22711:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22711:17:12"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "22736:8:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "22730:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22730:15:12"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "22701:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22701:45:12"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "22693:4:12"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 24847,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "22693:4:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24843,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "22715:8:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24843,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "22736:8:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 24849,
                  "nodeType": "InlineAssembly",
                  "src": "22670:86:12"
                },
                {
                  "expression": {
                    "id": 24860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24850,
                      "name": "rollup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24837,
                      "src": "22766:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Rollup_$24542",
                        "typeString": "contract Rollup"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 24853,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "22786:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 24854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "22786:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 24855,
                            "name": "LIFESPAN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24835,
                            "src": "22804:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22786:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 24857,
                          "name": "LEVELS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24827,
                          "src": "22814:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 24858,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24847,
                          "src": "22822:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHasher_$23149",
                            "typeString": "contract IHasher"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IHasher_$23149",
                            "typeString": "contract IHasher"
                          }
                        ],
                        "id": 24852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "22775:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint32_$_t_contract$_IHasher_$23149_$returns$_t_contract$_Rollup_$24542_$",
                          "typeString": "function (uint256,uint32,contract IHasher) returns (contract Rollup)"
                        },
                        "typeName": {
                          "id": 24851,
                          "name": "Rollup",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 24542,
                          "src": "22779:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Rollup_$24542",
                            "typeString": "contract Rollup"
                          }
                        }
                      },
                      "id": 24859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22775:52:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Rollup_$24542",
                        "typeString": "contract Rollup"
                      }
                    },
                    "src": "22766:61:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Rollup_$24542",
                      "typeString": "contract Rollup"
                    }
                  },
                  "id": 24861,
                  "nodeType": "ExpressionStatement",
                  "src": "22766:61:12"
                },
                {
                  "expression": {
                    "id": 24868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24862,
                      "name": "stateTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24839,
                      "src": "22837:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                        "typeString": "contract MerkleTreeWithHistoryMock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24865,
                          "name": "LEVELS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24827,
                          "src": "22879:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 24866,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24847,
                          "src": "22887:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHasher_$23149",
                            "typeString": "contract IHasher"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IHasher_$23149",
                            "typeString": "contract IHasher"
                          }
                        ],
                        "id": 24864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "22849:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint32_$_t_contract$_IHasher_$23149_$returns$_t_contract$_MerkleTreeWithHistoryMock_$23832_$",
                          "typeString": "function (uint32,contract IHasher) returns (contract MerkleTreeWithHistoryMock)"
                        },
                        "typeName": {
                          "id": 24863,
                          "name": "MerkleTreeWithHistoryMock",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 23832,
                          "src": "22853:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                            "typeString": "contract MerkleTreeWithHistoryMock"
                          }
                        }
                      },
                      "id": 24867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22849:43:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                        "typeString": "contract MerkleTreeWithHistoryMock"
                      }
                    },
                    "src": "22837:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                      "typeString": "contract MerkleTreeWithHistoryMock"
                    }
                  },
                  "id": 24869,
                  "nodeType": "ExpressionStatement",
                  "src": "22837:55:12"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "parameters": {
              "id": 24840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:2:12"
            },
            "returnParameters": {
              "id": 24841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:0:12"
            },
            "scope": 25706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24924,
            "nodeType": "FunctionDefinition",
            "src": "22905:272:12",
            "body": {
              "id": 24923,
              "nodeType": "Block",
              "src": "22997:180:12",
              "statements": [
                {
                  "body": {
                    "id": 24921,
                    "nodeType": "Block",
                    "src": "23035:136:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 24894,
                                "name": "tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24875,
                                "src": "23057:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_calldata_ptr",
                                  "typeString": "address[4] calldata"
                                }
                              },
                              "id": 24896,
                              "indexExpression": {
                                "id": 24895,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24883,
                                "src": "23061:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23057:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 24899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23070:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 24898,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23070:6:12",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    }
                                  ],
                                  "id": 24897,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "23065:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 24900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23065:12:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint32",
                                  "typeString": "type(uint32)"
                                }
                              },
                              "id": 24901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "23065:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 24891,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "23049:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 24893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6496,
                            "src": "23049:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 24902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23049:33:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24903,
                        "nodeType": "ExpressionStatement",
                        "src": "23049:33:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 24907,
                                "name": "tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24875,
                                "src": "23105:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_calldata_ptr",
                                  "typeString": "address[4] calldata"
                                }
                              },
                              "id": 24909,
                              "indexExpression": {
                                "id": 24908,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24883,
                                "src": "23109:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23105:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24904,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "23096:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 24906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6467,
                            "src": "23096:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 24910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23096:16:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24911,
                        "nodeType": "ExpressionStatement",
                        "src": "23096:16:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 24912,
                                "name": "rollup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24837,
                                "src": "23126:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Rollup_$24542",
                                  "typeString": "contract Rollup"
                                }
                              },
                              "id": 24914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24300,
                              "src": "23126:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 24918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "baseExpression": {
                                  "id": 24915,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24879,
                                  "src": "23148:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$4_calldata_ptr",
                                    "typeString": "uint32[4] calldata"
                                  }
                                },
                                "id": 24917,
                                "indexExpression": {
                                  "id": 24916,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24883,
                                  "src": "23155:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23148:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "src": "23126:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 24919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23126:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24920,
                        "nodeType": "ExpressionStatement",
                        "src": "23126:34:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24885,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24883,
                      "src": "23023:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24886,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "23027:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23023:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24922,
                  "initializationExpression": {
                    "assignments": [
                      24883
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24883,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 24922,
                        "src": "23012:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24882,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23012:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24884,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23012:9:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23030:3:12",
                      "subExpression": {
                        "id": 24888,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24883,
                        "src": "23030:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24890,
                    "nodeType": "ExpressionStatement",
                    "src": "23030:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "23007:164:12"
                }
              ]
            },
            "functionSelector": "b9ebbabc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "parameters": {
              "id": 24880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24875,
                  "mutability": "mutable",
                  "name": "tos",
                  "nodeType": "VariableDeclaration",
                  "scope": 24924,
                  "src": "22926:23:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$4_calldata_ptr",
                    "typeString": "address[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24872,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "22926:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24874,
                    "length": {
                      "id": 24873,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "22934:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "22926:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$4_storage_ptr",
                      "typeString": "address[4]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24879,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 24924,
                  "src": "22951:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_calldata_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24876,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "22951:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 24878,
                    "length": {
                      "id": 24877,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "22958:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "22951:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22925:52:12"
            },
            "returnParameters": {
              "id": 24881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22997:0:12"
            },
            "scope": 25706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25705,
            "nodeType": "FunctionDefinition",
            "src": "23183:6021:12",
            "body": {
              "id": 25704,
              "nodeType": "Block",
              "src": "23314:5890:12",
              "statements": [
                {
                  "body": {
                    "id": 24958,
                    "nodeType": "Block",
                    "src": "23352:57:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 24951,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24936,
                                  "src": "23376:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                    "typeString": "uint256[4] memory"
                                  }
                                },
                                "id": 24953,
                                "indexExpression": {
                                  "id": 24952,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24940,
                                  "src": "23383:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23376:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 24954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23388:9:12",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000000"
                                },
                                "value": "100"
                              },
                              "src": "23376:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 24948,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "23366:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 24950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assume",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6619,
                            "src": "23366:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool) external"
                            }
                          },
                          "id": 24956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23366:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24957,
                        "nodeType": "ExpressionStatement",
                        "src": "23366:32:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24942,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24940,
                      "src": "23340:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24943,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "23344:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23340:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24959,
                  "initializationExpression": {
                    "assignments": [
                      24940
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24940,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 24959,
                        "src": "23329:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23329:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24941,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23329:9:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23347:3:12",
                      "subExpression": {
                        "id": 24945,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24940,
                        "src": "23347:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24947,
                    "nodeType": "ExpressionStatement",
                    "src": "23347:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "23324:85:12"
                },
                {
                  "assignments": [
                    24967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24967,
                      "mutability": "mutable",
                      "name": "balances",
                      "nodeType": "VariableDeclaration",
                      "scope": 25704,
                      "src": "23419:29:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                        "typeString": "uint256[4][4]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 24964,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23419:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 24965,
                          "length": {
                            "id": 24962,
                            "name": "N",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24832,
                            "src": "23427:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "23419:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 24966,
                        "length": {
                          "id": 24963,
                          "name": "N",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24832,
                          "src": "23430:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "23419:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$4_storage_ptr",
                          "typeString": "uint256[4][4]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24968,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23419:29:12"
                },
                {
                  "body": {
                    "id": 25271,
                    "nodeType": "Block",
                    "src": "23490:2117:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 24982,
                                "name": "tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24932,
                                "src": "23512:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                  "typeString": "address[4] memory"
                                }
                              },
                              "id": 24984,
                              "indexExpression": {
                                "id": 24983,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24970,
                                "src": "23516:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23512:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 24987,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23525:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 24986,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23525:6:12",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    }
                                  ],
                                  "id": 24985,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "23520:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 24988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23520:12:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint32",
                                  "typeString": "type(uint32)"
                                }
                              },
                              "id": 24989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "23520:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 24979,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "23504:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 24981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6496,
                            "src": "23504:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 24990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23504:33:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24991,
                        "nodeType": "ExpressionStatement",
                        "src": "23504:33:12"
                      },
                      {
                        "assignments": [
                          24993
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24993,
                            "mutability": "mutable",
                            "name": "toSeenCounter",
                            "nodeType": "VariableDeclaration",
                            "scope": 25271,
                            "src": "23552:21:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 24992,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23552:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24994,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23552:21:12"
                      },
                      {
                        "assignments": [
                          24996
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24996,
                            "mutability": "mutable",
                            "name": "fromSeenCounter",
                            "nodeType": "VariableDeclaration",
                            "scope": 25271,
                            "src": "23587:23:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 24995,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23587:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24997,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23587:23:12"
                      },
                      {
                        "body": {
                          "id": 25172,
                          "nodeType": "Block",
                          "src": "23656:1377:12",
                          "statements": [
                            {
                              "assignments": [
                                25009
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25009,
                                  "mutability": "mutable",
                                  "name": "isTo",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "23745:9:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 25008,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23745:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25017,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 25016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 25010,
                                    "name": "tos",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24932,
                                    "src": "23757:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                      "typeString": "address[4] memory"
                                    }
                                  },
                                  "id": 25012,
                                  "indexExpression": {
                                    "id": 25011,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24970,
                                    "src": "23761:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23757:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 25013,
                                    "name": "tos",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24932,
                                    "src": "23767:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                      "typeString": "address[4] memory"
                                    }
                                  },
                                  "id": 25015,
                                  "indexExpression": {
                                    "id": 25014,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24999,
                                    "src": "23771:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23767:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "23757:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23745:28:12"
                            },
                            {
                              "assignments": [
                                25019
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25019,
                                  "mutability": "mutable",
                                  "name": "isFrom",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "23791:11:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 25018,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23791:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25027,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 25026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 25020,
                                    "name": "tos",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24932,
                                    "src": "23805:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                      "typeString": "address[4] memory"
                                    }
                                  },
                                  "id": 25022,
                                  "indexExpression": {
                                    "id": 25021,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24970,
                                    "src": "23809:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23805:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 25023,
                                    "name": "froms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24928,
                                    "src": "23815:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                      "typeString": "address[4] memory"
                                    }
                                  },
                                  "id": 25025,
                                  "indexExpression": {
                                    "id": 25024,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24999,
                                    "src": "23821:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23815:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "23805:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23791:32:12"
                            },
                            {
                              "expression": {
                                "id": 25039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 25028,
                                  "name": "toSeenCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24993,
                                  "src": "23963:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25031,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 25029,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24970,
                                      "src": "23980:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "id": 25030,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24999,
                                      "src": "23984:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "23980:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "30",
                                    "id": 25037,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24005:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 25038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "23980:26:12",
                                  "trueExpression": {
                                    "components": [
                                      {
                                        "condition": {
                                          "id": 25032,
                                          "name": "isTo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25009,
                                          "src": "23989:4:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "30",
                                          "id": 25034,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "24000:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "id": 25035,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "23989:12:12",
                                        "trueExpression": {
                                          "hexValue": "31",
                                          "id": 25033,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "23996:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "id": 25036,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "23988:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "23963:43:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 25040,
                              "nodeType": "ExpressionStatement",
                              "src": "23963:43:12"
                            },
                            {
                              "assignments": [
                                25042
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25042,
                                  "mutability": "mutable",
                                  "name": "toSeen",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "24024:11:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 25041,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24024:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25046,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25043,
                                  "name": "toSeenCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24993,
                                  "src": "24038:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 25044,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "24055:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "24038:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24024:32:12"
                            },
                            {
                              "expression": {
                                "id": 25058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 25047,
                                  "name": "fromSeenCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24996,
                                  "src": "24074:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25050,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 25048,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24970,
                                      "src": "24093:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "id": 25049,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24999,
                                      "src": "24097:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "24093:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "30",
                                    "id": 25056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24120:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 25057,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "24093:28:12",
                                  "trueExpression": {
                                    "components": [
                                      {
                                        "condition": {
                                          "id": 25051,
                                          "name": "isFrom",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25019,
                                          "src": "24102:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "30",
                                          "id": 25053,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "24115:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "id": 25054,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "24102:14:12",
                                        "trueExpression": {
                                          "hexValue": "31",
                                          "id": 25052,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "24111:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "id": 25055,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "24101:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "24074:47:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 25059,
                              "nodeType": "ExpressionStatement",
                              "src": "24074:47:12"
                            },
                            {
                              "assignments": [
                                25061
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25061,
                                  "mutability": "mutable",
                                  "name": "fromSeen",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "24139:13:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 25060,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24139:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25065,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25062,
                                  "name": "fromSeenCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24996,
                                  "src": "24155:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 25063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "24174:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "24155:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24139:36:12"
                            },
                            {
                              "assignments": [
                                25067
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25067,
                                  "mutability": "mutable",
                                  "name": "b",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "24194:9:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 25066,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24194:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25068,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24194:9:12"
                            },
                            {
                              "body": {
                                "id": 25106,
                                "nodeType": "Block",
                                "src": "24250:187:12",
                                "statements": [
                                  {
                                    "assignments": [
                                      25079
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 25079,
                                        "mutability": "mutable",
                                        "name": "yeet",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 25106,
                                        "src": "24272:9:12",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "typeName": {
                                          "id": 25078,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "24272:4:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 25087,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 25086,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 25080,
                                          "name": "froms",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24928,
                                          "src": "24284:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                            "typeString": "address[4] memory"
                                          }
                                        },
                                        "id": 25082,
                                        "indexExpression": {
                                          "id": 25081,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24999,
                                          "src": "24290:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "24284:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 25083,
                                          "name": "tos",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24932,
                                          "src": "24296:3:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                            "typeString": "address[4] memory"
                                          }
                                        },
                                        "id": 25085,
                                        "indexExpression": {
                                          "id": 25084,
                                          "name": "k",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25070,
                                          "src": "24300:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "24296:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "24284:18:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "24272:30:12"
                                  },
                                  {
                                    "condition": {
                                      "id": 25088,
                                      "name": "yeet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25079,
                                      "src": "24329:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 25105,
                                    "nodeType": "IfStatement",
                                    "src": "24325:94:12",
                                    "trueBody": {
                                      "id": 25104,
                                      "nodeType": "Block",
                                      "src": "24335:84:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 25102,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 25089,
                                              "name": "b",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25067,
                                              "src": "24361:1:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "+=",
                                            "rightHandSide": {
                                              "condition": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 25092,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 25090,
                                                  "name": "j",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 24999,
                                                  "src": "24366:1:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                  "hexValue": "30",
                                                  "id": 25091,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "24370:1:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  },
                                                  "value": "0"
                                                },
                                                "src": "24366:5:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseExpression": {
                                                "hexValue": "30",
                                                "id": 25100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "24395:1:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              },
                                              "id": 25101,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "Conditional",
                                              "src": "24366:30:12",
                                              "trueExpression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 25093,
                                                    "name": "balances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24967,
                                                    "src": "24374:8:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                                      "typeString": "uint256[4] memory[4] memory"
                                                    }
                                                  },
                                                  "id": 25095,
                                                  "indexExpression": {
                                                    "id": 25094,
                                                    "name": "k",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25070,
                                                    "src": "24383:1:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "24374:11:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                                    "typeString": "uint256[4] memory"
                                                  }
                                                },
                                                "id": 25099,
                                                "indexExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 25098,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 25096,
                                                    "name": "j",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24999,
                                                    "src": "24386:1:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "hexValue": "31",
                                                    "id": 25097,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "24390:1:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_1_by_1",
                                                      "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                  },
                                                  "src": "24386:5:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "24374:18:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "24361:35:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 25103,
                                          "nodeType": "ExpressionStatement",
                                          "src": "24361:35:12"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25072,
                                  "name": "k",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25070,
                                  "src": "24237:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 25073,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24970,
                                  "src": "24242:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24237:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25107,
                              "initializationExpression": {
                                "assignments": [
                                  25070
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 25070,
                                    "mutability": "mutable",
                                    "name": "k",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 25107,
                                    "src": "24226:9:12",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 25069,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "24226:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 25071,
                                "nodeType": "VariableDeclarationStatement",
                                "src": "24226:9:12"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 25076,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "24245:3:12",
                                  "subExpression": {
                                    "id": 25075,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25070,
                                    "src": "24245:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 25077,
                                "nodeType": "ExpressionStatement",
                                "src": "24245:3:12"
                              },
                              "nodeType": "ForStatement",
                              "src": "24221:216:12"
                            },
                            {
                              "assignments": [
                                25109
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25109,
                                  "mutability": "mutable",
                                  "name": "shouldIncreaseBalance",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "24528:26:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 25108,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24528:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25129,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 25128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 25112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 25110,
                                    "name": "toSeen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25042,
                                    "src": "24557:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "id": 25111,
                                    "name": "isTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25009,
                                    "src": "24587:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "24557:34:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 25126,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "id": 25120,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 25113,
                                            "name": "froms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24928,
                                            "src": "24616:5:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                              "typeString": "address[4] memory"
                                            }
                                          },
                                          "id": 25115,
                                          "indexExpression": {
                                            "id": 25114,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24999,
                                            "src": "24622:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "24616:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 25118,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "24636:1:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "id": 25117,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "24628:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 25116,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "24628:7:12",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 25119,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "24628:10:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "src": "24616:22:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 25125,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 25121,
                                          "name": "b",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25067,
                                          "src": "24642:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">=",
                                        "rightExpression": {
                                          "baseExpression": {
                                            "id": 25122,
                                            "name": "values",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24936,
                                            "src": "24647:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                              "typeString": "uint256[4] memory"
                                            }
                                          },
                                          "id": 25124,
                                          "indexExpression": {
                                            "id": 25123,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24999,
                                            "src": "24654:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "24647:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "24642:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "24616:40:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 25127,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "24615:42:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "24557:100:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24528:129:12"
                            },
                            {
                              "assignments": [
                                25131
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25131,
                                  "mutability": "mutable",
                                  "name": "shouldDecreaseBalance",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25172,
                                  "src": "24675:26:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 25130,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24675:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25145,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 25144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 25134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 25132,
                                    "name": "fromSeen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25061,
                                    "src": "24704:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "id": 25133,
                                    "name": "isFrom",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25019,
                                    "src": "24736:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "24704:38:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 25143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 25135,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24967,
                                        "src": "24766:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                          "typeString": "uint256[4] memory[4] memory"
                                        }
                                      },
                                      "id": 25137,
                                      "indexExpression": {
                                        "id": 25136,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24970,
                                        "src": "24775:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "24766:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                        "typeString": "uint256[4] memory"
                                      }
                                    },
                                    "id": 25139,
                                    "indexExpression": {
                                      "id": 25138,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24999,
                                      "src": "24778:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24766:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "baseExpression": {
                                      "id": 25140,
                                      "name": "values",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24936,
                                      "src": "24784:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                        "typeString": "uint256[4] memory"
                                      }
                                    },
                                    "id": 25142,
                                    "indexExpression": {
                                      "id": 25141,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24999,
                                      "src": "24791:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24784:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "24766:27:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "24704:89:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24675:118:12"
                            },
                            {
                              "condition": {
                                "id": 25146,
                                "name": "shouldIncreaseBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25109,
                                "src": "24816:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25158,
                              "nodeType": "IfStatement",
                              "src": "24812:95:12",
                              "trueBody": {
                                "id": 25157,
                                "nodeType": "Block",
                                "src": "24839:68:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 25155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 25147,
                                            "name": "balances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24967,
                                            "src": "24861:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                              "typeString": "uint256[4] memory[4] memory"
                                            }
                                          },
                                          "id": 25150,
                                          "indexExpression": {
                                            "id": 25148,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24970,
                                            "src": "24870:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "24861:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                            "typeString": "uint256[4] memory"
                                          }
                                        },
                                        "id": 25151,
                                        "indexExpression": {
                                          "id": 25149,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24999,
                                          "src": "24873:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "24861:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 25152,
                                          "name": "values",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24936,
                                          "src": "24879:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                            "typeString": "uint256[4] memory"
                                          }
                                        },
                                        "id": 25154,
                                        "indexExpression": {
                                          "id": 25153,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24999,
                                          "src": "24886:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "24879:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "24861:27:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 25156,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24861:27:12"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "id": 25159,
                                "name": "shouldDecreaseBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25131,
                                "src": "24928:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25171,
                              "nodeType": "IfStatement",
                              "src": "24924:95:12",
                              "trueBody": {
                                "id": 25170,
                                "nodeType": "Block",
                                "src": "24951:68:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 25168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 25160,
                                            "name": "balances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24967,
                                            "src": "24973:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                              "typeString": "uint256[4] memory[4] memory"
                                            }
                                          },
                                          "id": 25163,
                                          "indexExpression": {
                                            "id": 25161,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24970,
                                            "src": "24982:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "24973:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                            "typeString": "uint256[4] memory"
                                          }
                                        },
                                        "id": 25164,
                                        "indexExpression": {
                                          "id": 25162,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24999,
                                          "src": "24985:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "24973:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 25165,
                                          "name": "values",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24936,
                                          "src": "24991:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                            "typeString": "uint256[4] memory"
                                          }
                                        },
                                        "id": 25167,
                                        "indexExpression": {
                                          "id": 25166,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24999,
                                          "src": "24998:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "24991:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "24973:27:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 25169,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24973:27:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25002,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24999,
                            "src": "23644:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 25003,
                            "name": "N",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24832,
                            "src": "23648:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23644:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25173,
                        "initializationExpression": {
                          "assignments": [
                            24999
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 24999,
                              "mutability": "mutable",
                              "name": "j",
                              "nodeType": "VariableDeclaration",
                              "scope": 25173,
                              "src": "23629:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 24998,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23629:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 25001,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 25000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23641:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "23629:13:12"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 25006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "23651:3:12",
                            "subExpression": {
                              "id": 25005,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24999,
                              "src": "23651:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 25007,
                          "nodeType": "ExpressionStatement",
                          "src": "23651:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "23624:1409:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 25175,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24967,
                                  "src": "25056:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                    "typeString": "uint256[4] memory[4] memory"
                                  }
                                },
                                "id": 25177,
                                "indexExpression": {
                                  "id": 25176,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24970,
                                  "src": "25065:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "25056:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                  "typeString": "uint256[4] memory"
                                }
                              },
                              "id": 25181,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25178,
                                  "name": "N",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24832,
                                  "src": "25068:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 25179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "25072:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "25068:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25056:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 25182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25076:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25174,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3163,
                              3188,
                              3201,
                              3217,
                              3259,
                              3301,
                              3343,
                              3380,
                              3417,
                              3454,
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "25047:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 25183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25047:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25184,
                        "nodeType": "ExpressionStatement",
                        "src": "25047:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 25190,
                                      "name": "stateTree",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24839,
                                      "src": "25172:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                        "typeString": "contract MerkleTreeWithHistoryMock"
                                      }
                                    },
                                    "id": 25191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hasher",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23157,
                                    "src": "25172:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHasher_$23149_$",
                                      "typeString": "function () view external returns (contract IHasher)"
                                    }
                                  },
                                  "id": 25192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25172:18:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IHasher_$23149",
                                    "typeString": "contract IHasher"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 25197,
                                            "name": "tos",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24932,
                                            "src": "25228:3:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                              "typeString": "address[4] memory"
                                            }
                                          },
                                          "id": 25199,
                                          "indexExpression": {
                                            "id": 25198,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24970,
                                            "src": "25232:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "25228:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 25196,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "25220:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 25195,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "25220:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 25200,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "25220:15:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 25194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "25212:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 25193,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "25212:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 25201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25212:24:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 25204,
                                          "name": "balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24967,
                                          "src": "25266:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                            "typeString": "uint256[4] memory[4] memory"
                                          }
                                        },
                                        "id": 25206,
                                        "indexExpression": {
                                          "id": 25205,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24970,
                                          "src": "25275:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "25266:11:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                          "typeString": "uint256[4] memory"
                                        }
                                      },
                                      "id": 25210,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 25209,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 25207,
                                          "name": "N",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24832,
                                          "src": "25278:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 25208,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "25282:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "25278:5:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "25266:18:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 25203,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "25258:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 25202,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "25258:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 25211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25258:27:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IHasher_$23149",
                                    "typeString": "contract IHasher"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 25188,
                                  "name": "stateTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24839,
                                  "src": "25127:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                    "typeString": "contract MerkleTreeWithHistoryMock"
                                  }
                                },
                                "id": 25189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "hashLeftRight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23316,
                                "src": "25127:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_contract$_IHasher_$23149_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                  "typeString": "function (contract IHasher,bytes32,bytes32) pure external returns (bytes32)"
                                }
                              },
                              "id": 25212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25127:176:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 25185,
                              "name": "stateTree",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24839,
                              "src": "25093:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                "typeString": "contract MerkleTreeWithHistoryMock"
                              }
                            },
                            "id": 25187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "insert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23831,
                            "src": "25093:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) external"
                            }
                          },
                          "id": 25213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25093:224:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25214,
                        "nodeType": "ExpressionStatement",
                        "src": "25093:224:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 25222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 25215,
                              "name": "froms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24928,
                              "src": "25336:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                "typeString": "address[4] memory"
                              }
                            },
                            "id": 25217,
                            "indexExpression": {
                              "id": 25216,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24970,
                              "src": "25342:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25336:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 25220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25356:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 25219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25348:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25218,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25348:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25348:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "25336:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 25269,
                          "nodeType": "Block",
                          "src": "25467:130:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 25244,
                                      "name": "froms",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24928,
                                      "src": "25494:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                        "typeString": "address[4] memory"
                                      }
                                    },
                                    "id": 25246,
                                    "indexExpression": {
                                      "id": 25245,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24970,
                                      "src": "25500:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25494:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 25241,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "25485:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$7007",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 25243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "prank",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6467,
                                  "src": "25485:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 25247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25485:18:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25248,
                              "nodeType": "ExpressionStatement",
                              "src": "25485:18:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 25256,
                                              "name": "tos",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 24932,
                                              "src": "25553:3:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                                "typeString": "address[4] memory"
                                              }
                                            },
                                            "id": 25258,
                                            "indexExpression": {
                                              "id": 25257,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 24970,
                                              "src": "25557:1:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "25553:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 25255,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "25545:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 25254,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "25545:7:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "25545:15:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 25253,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "25537:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 25252,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "25537:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 25260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "25537:24:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 25263,
                                          "name": "values",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24936,
                                          "src": "25571:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                            "typeString": "uint256[4] memory"
                                          }
                                        },
                                        "id": 25265,
                                        "indexExpression": {
                                          "id": 25264,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24970,
                                          "src": "25578:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "25571:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 25262,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "25563:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 25261,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "25563:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 25266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "25563:18:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 25249,
                                    "name": "rollup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24837,
                                    "src": "25521:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Rollup_$24542",
                                      "typeString": "contract Rollup"
                                    }
                                  },
                                  "id": 25251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24357,
                                  "src": "25521:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32,bytes32) payable external"
                                  }
                                },
                                "id": 25267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25521:61:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25268,
                              "nodeType": "ExpressionStatement",
                              "src": "25521:61:12"
                            }
                          ]
                        },
                        "id": 25270,
                        "nodeType": "IfStatement",
                        "src": "25332:265:12",
                        "trueBody": {
                          "id": 25240,
                          "nodeType": "Block",
                          "src": "25360:101:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 25226,
                                      "name": "tos",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24932,
                                      "src": "25387:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                        "typeString": "address[4] memory"
                                      }
                                    },
                                    "id": 25228,
                                    "indexExpression": {
                                      "id": 25227,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24970,
                                      "src": "25391:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25387:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 25223,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "25378:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$7007",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 25225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "prank",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6467,
                                  "src": "25378:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 25229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25378:16:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25230,
                              "nodeType": "ExpressionStatement",
                              "src": "25378:16:12"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 25231,
                                      "name": "rollup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24837,
                                      "src": "25412:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Rollup_$24542",
                                        "typeString": "contract Rollup"
                                      }
                                    },
                                    "id": 25233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deposit",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24300,
                                    "src": "25412:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                      "typeString": "function () payable external"
                                    }
                                  },
                                  "id": 25237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "baseExpression": {
                                        "id": 25234,
                                        "name": "values",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24936,
                                        "src": "25434:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                          "typeString": "uint256[4] memory"
                                        }
                                      },
                                      "id": 25236,
                                      "indexExpression": {
                                        "id": 25235,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24970,
                                        "src": "25441:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "25434:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "25412:32:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 25238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25412:34:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25239,
                              "nodeType": "ExpressionStatement",
                              "src": "25412:34:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24973,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24970,
                      "src": "23478:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24974,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "23482:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23478:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25272,
                  "initializationExpression": {
                    "assignments": [
                      24970
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24970,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 25272,
                        "src": "23463:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24969,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23463:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24972,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23475:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23463:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23485:3:12",
                      "subExpression": {
                        "id": 24976,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24970,
                        "src": "23485:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24978,
                    "nodeType": "ExpressionStatement",
                    "src": "23485:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "23458:2149:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526f6c6c75702069732066756c6c",
                        "id": 25276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25678:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89bd336580e8cea696b50fb927713e69cc8340fb27084f114acfbfca3dcb68fa",
                          "typeString": "literal_string \"Rollup is full\""
                        },
                        "value": "Rollup is full"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_89bd336580e8cea696b50fb927713e69cc8340fb27084f114acfbfca3dcb68fa",
                          "typeString": "literal_string \"Rollup is full\""
                        }
                      ],
                      "expression": {
                        "id": 25273,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "25662:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7007",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6508,
                      "src": "25662:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25662:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25278,
                  "nodeType": "ExpressionStatement",
                  "src": "25662:33:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25279,
                        "name": "rollup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24837,
                        "src": "25705:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Rollup_$24542",
                          "typeString": "contract Rollup"
                        }
                      },
                      "id": 25281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24300,
                      "src": "25705:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 25282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25705:16:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25283,
                  "nodeType": "ExpressionStatement",
                  "src": "25705:16:12"
                },
                {
                  "body": {
                    "id": 25338,
                    "nodeType": "Block",
                    "src": "25809:369:12",
                    "statements": [
                      {
                        "assignments": [
                          25297
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25297,
                            "mutability": "mutable",
                            "name": "pathElements",
                            "nodeType": "VariableDeclaration",
                            "scope": 25338,
                            "src": "25823:29:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25295,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "25823:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25296,
                              "nodeType": "ArrayTypeName",
                              "src": "25823:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25303,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 25301,
                              "name": "LEVELS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24827,
                              "src": "25869:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 25300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "25855:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25298,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "25859:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25299,
                              "nodeType": "ArrayTypeName",
                              "src": "25859:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 25302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25855:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25823:53:12"
                      },
                      {
                        "assignments": [
                          25308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25308,
                            "mutability": "mutable",
                            "name": "pathIndices",
                            "nodeType": "VariableDeclaration",
                            "scope": 25338,
                            "src": "25890:25:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25306,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "25890:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25307,
                              "nodeType": "ArrayTypeName",
                              "src": "25890:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25314,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 25312,
                              "name": "LEVELS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24827,
                              "src": "25929:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 25311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "25918:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25309,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "25922:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25310,
                              "nodeType": "ArrayTypeName",
                              "src": "25922:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 25313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25918:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25890:46:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "50726f766964656420726f6f7420646f6573206e6f74206d6174636820726573756c74",
                              "id": 25318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25967:37:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8817b880da87f35073e8a41fb12a2629050c52f0cba09aa22af3fd92debbef",
                                "typeString": "literal_string \"Provided root does not match result\""
                              },
                              "value": "Provided root does not match result"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8817b880da87f35073e8a41fb12a2629050c52f0cba09aa22af3fd92debbef",
                                "typeString": "literal_string \"Provided root does not match result\""
                              }
                            ],
                            "expression": {
                              "id": 25315,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "25951:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6508,
                            "src": "25951:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 25319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25951:54:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25320,
                        "nodeType": "ExpressionStatement",
                        "src": "25951:54:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 25324,
                                "name": "tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24932,
                                "src": "26052:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                  "typeString": "address[4] memory"
                                }
                              },
                              "id": 25326,
                              "indexExpression": {
                                "id": 25325,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25285,
                                "src": "26056:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26052:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 25327,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24967,
                                  "src": "26076:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                    "typeString": "uint256[4] memory[4] memory"
                                  }
                                },
                                "id": 25329,
                                "indexExpression": {
                                  "id": 25328,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25285,
                                  "src": "26085:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "26076:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                  "typeString": "uint256[4] memory"
                                }
                              },
                              "id": 25333,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25330,
                                  "name": "N",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24832,
                                  "src": "26088:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 25331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "26092:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "26088:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26076:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25334,
                              "name": "pathElements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25297,
                              "src": "26112:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "id": 25335,
                              "name": "pathIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25308,
                              "src": "26142:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            ],
                            "expression": {
                              "id": 25321,
                              "name": "rollup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24837,
                              "src": "26019:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Rollup_$24542",
                                "typeString": "contract Rollup"
                              }
                            },
                            "id": 25323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24467,
                            "src": "26019:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes32[] memory,bool[] memory) external"
                            }
                          },
                          "id": 25336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26019:148:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25337,
                        "nodeType": "ExpressionStatement",
                        "src": "26019:148:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25287,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25285,
                      "src": "25797:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 25288,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "25801:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25797:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25339,
                  "initializationExpression": {
                    "assignments": [
                      25285
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25285,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 25339,
                        "src": "25786:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25786:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25286,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "25786:9:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "25804:3:12",
                      "subExpression": {
                        "id": 25290,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25285,
                        "src": "25804:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25292,
                    "nodeType": "ExpressionStatement",
                    "src": "25804:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "25781:397:12"
                },
                {
                  "id": 25359,
                  "nodeType": "Block",
                  "src": "26241:182:12",
                  "statements": [
                    {
                      "assignments": [
                        25341
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25341,
                          "mutability": "mutable",
                          "name": "root",
                          "nodeType": "VariableDeclaration",
                          "scope": 25359,
                          "src": "26255:12:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 25340,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "26255:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25345,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25342,
                            "name": "stateTree",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24839,
                            "src": "26270:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                              "typeString": "contract MerkleTreeWithHistoryMock"
                            }
                          },
                          "id": 25343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getLastRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23502,
                          "src": "26270:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 25344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26270:23:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "26255:38:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "54686520726f6c6c757020686173206e6f7420656e746572656420746865207265736f6c7574696f6e207374616765",
                            "id": 25349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26324:49:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_27e88ba9c50e8897b4bb25a56ff55441fe50fb87b538121c8c5824f5c94a7c33",
                              "typeString": "literal_string \"The rollup has not entered the resolution stage\""
                            },
                            "value": "The rollup has not entered the resolution stage"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_27e88ba9c50e8897b4bb25a56ff55441fe50fb87b538121c8c5824f5c94a7c33",
                              "typeString": "literal_string \"The rollup has not entered the resolution stage\""
                            }
                          ],
                          "expression": {
                            "id": 25346,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "26308:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7007",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 25348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expectRevert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6508,
                          "src": "26308:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory) external"
                          }
                        },
                        "id": 25350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26308:66:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25351,
                      "nodeType": "ExpressionStatement",
                      "src": "26308:66:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 25355,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25341,
                            "src": "26403:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 25356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26409:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 25352,
                            "name": "rollup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24837,
                            "src": "26388:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Rollup_$24542",
                              "typeString": "contract Rollup"
                            }
                          },
                          "id": 25354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24418,
                          "src": "26388:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,bytes memory) external"
                          }
                        },
                        "id": 25357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26388:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25358,
                      "nodeType": "ExpressionStatement",
                      "src": "26388:24:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 25363,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "26441:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 25364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "26441:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 25365,
                            "name": "LIFESPAN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24835,
                            "src": "26459:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26441:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26470:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "26441:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25360,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "26433:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7007",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6256,
                      "src": "26433:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26433:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25370,
                  "nodeType": "ExpressionStatement",
                  "src": "26433:40:12"
                },
                {
                  "body": {
                    "id": 25399,
                    "nodeType": "Block",
                    "src": "26575:147:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 25383,
                                "name": "tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24932,
                                "src": "26598:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                  "typeString": "address[4] memory"
                                }
                              },
                              "id": 25385,
                              "indexExpression": {
                                "id": 25384,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25372,
                                "src": "26602:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26598:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25380,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "26589:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6467,
                            "src": "26589:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 25386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26589:16:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25387,
                        "nodeType": "ExpressionStatement",
                        "src": "26589:16:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "54686520726f6c6c75702068617320656e746572656420746865207265736f6c7574696f6e207374616765",
                              "id": 25391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26635:45:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b15e6b1bde6fb00a6c6f0143a58a7851696ef85558ba5597d51566b7999adac9",
                                "typeString": "literal_string \"The rollup has entered the resolution stage\""
                              },
                              "value": "The rollup has entered the resolution stage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b15e6b1bde6fb00a6c6f0143a58a7851696ef85558ba5597d51566b7999adac9",
                                "typeString": "literal_string \"The rollup has entered the resolution stage\""
                              }
                            ],
                            "expression": {
                              "id": 25388,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "26619:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6508,
                            "src": "26619:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 25392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26619:62:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25393,
                        "nodeType": "ExpressionStatement",
                        "src": "26619:62:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25394,
                              "name": "rollup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24837,
                              "src": "26695:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Rollup_$24542",
                                "typeString": "contract Rollup"
                              }
                            },
                            "id": 25396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24300,
                            "src": "26695:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 25397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26695:16:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25398,
                        "nodeType": "ExpressionStatement",
                        "src": "26695:16:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25374,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25372,
                      "src": "26563:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 25375,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "26567:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26563:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25400,
                  "initializationExpression": {
                    "assignments": [
                      25372
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25372,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 25400,
                        "src": "26552:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25371,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26552:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25373,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "26552:9:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "26570:3:12",
                      "subExpression": {
                        "id": 25377,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25372,
                        "src": "26570:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25379,
                    "nodeType": "ExpressionStatement",
                    "src": "26570:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "26547:175:12"
                },
                {
                  "body": {
                    "id": 25444,
                    "nodeType": "Block",
                    "src": "26808:194:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 25413,
                                "name": "froms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24928,
                                "src": "26831:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                  "typeString": "address[4] memory"
                                }
                              },
                              "id": 25415,
                              "indexExpression": {
                                "id": 25414,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25402,
                                "src": "26837:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26831:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25410,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "26822:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6467,
                            "src": "26822:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 25416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26822:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25417,
                        "nodeType": "ExpressionStatement",
                        "src": "26822:18:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "54686520726f6c6c75702068617320656e746572656420746865207265736f6c7574696f6e207374616765",
                              "id": 25421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26870:45:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b15e6b1bde6fb00a6c6f0143a58a7851696ef85558ba5597d51566b7999adac9",
                                "typeString": "literal_string \"The rollup has entered the resolution stage\""
                              },
                              "value": "The rollup has entered the resolution stage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b15e6b1bde6fb00a6c6f0143a58a7851696ef85558ba5597d51566b7999adac9",
                                "typeString": "literal_string \"The rollup has entered the resolution stage\""
                              }
                            ],
                            "expression": {
                              "id": 25418,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "26854:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6508,
                            "src": "26854:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 25422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26854:62:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25423,
                        "nodeType": "ExpressionStatement",
                        "src": "26854:62:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 25431,
                                        "name": "tos",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24932,
                                        "src": "26962:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                          "typeString": "address[4] memory"
                                        }
                                      },
                                      "id": 25433,
                                      "indexExpression": {
                                        "id": 25432,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25402,
                                        "src": "26966:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "26962:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 25430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "26954:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 25429,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "26954:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 25434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26954:15:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 25428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26946:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 25427,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26946:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26946:24:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 25438,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24936,
                                    "src": "26980:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                      "typeString": "uint256[4] memory"
                                    }
                                  },
                                  "id": 25440,
                                  "indexExpression": {
                                    "id": 25439,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25402,
                                    "src": "26987:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26980:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 25437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26972:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 25436,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26972:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26972:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 25424,
                              "name": "rollup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24837,
                              "src": "26930:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Rollup_$24542",
                                "typeString": "contract Rollup"
                              }
                            },
                            "id": 25426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24357,
                            "src": "26930:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) payable external"
                            }
                          },
                          "id": 25442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26930:61:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25443,
                        "nodeType": "ExpressionStatement",
                        "src": "26930:61:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25404,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25402,
                      "src": "26796:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 25405,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "26800:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26796:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25445,
                  "initializationExpression": {
                    "assignments": [
                      25402
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25402,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 25445,
                        "src": "26785:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25401,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26785:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25403,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "26785:9:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "26803:3:12",
                      "subExpression": {
                        "id": 25407,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25402,
                        "src": "26803:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25409,
                    "nodeType": "ExpressionStatement",
                    "src": "26803:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "26780:222:12"
                },
                {
                  "id": 25465,
                  "nodeType": "Block",
                  "src": "27075:160:12",
                  "statements": [
                    {
                      "assignments": [
                        25447
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25447,
                          "mutability": "mutable",
                          "name": "root",
                          "nodeType": "VariableDeclaration",
                          "scope": 25465,
                          "src": "27089:12:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 25446,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "27089:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25451,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25448,
                            "name": "stateTree",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24839,
                            "src": "27104:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                              "typeString": "contract MerkleTreeWithHistoryMock"
                            }
                          },
                          "id": 25449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getLastRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23502,
                          "src": "27104:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 25450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27104:23:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "27089:38:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "50726f6f6620766572696669636174696f6e206661696c6564",
                            "id": 25455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27158:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7e2efec1f544bbaa44f2386b838505123080bcfeba85da0c15ecc39d8fe52d37",
                              "typeString": "literal_string \"Proof verification failed\""
                            },
                            "value": "Proof verification failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7e2efec1f544bbaa44f2386b838505123080bcfeba85da0c15ecc39d8fe52d37",
                              "typeString": "literal_string \"Proof verification failed\""
                            }
                          ],
                          "expression": {
                            "id": 25452,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "27142:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7007",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 25454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expectRevert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6508,
                          "src": "27142:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory) external"
                          }
                        },
                        "id": 25456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27142:44:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25457,
                      "nodeType": "ExpressionStatement",
                      "src": "27142:44:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 25461,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25447,
                            "src": "27215:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 25462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27221:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 25458,
                            "name": "rollup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24837,
                            "src": "27200:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Rollup_$24542",
                              "typeString": "contract Rollup"
                            }
                          },
                          "id": 25460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24418,
                          "src": "27200:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,bytes memory) external"
                          }
                        },
                        "id": 25463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27200:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25464,
                      "nodeType": "ExpressionStatement",
                      "src": "27200:24:12"
                    }
                  ]
                },
                {
                  "id": 25490,
                  "nodeType": "Block",
                  "src": "27275:196:12",
                  "statements": [
                    {
                      "assignments": [
                        25467
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25467,
                          "mutability": "mutable",
                          "name": "prover",
                          "nodeType": "VariableDeclaration",
                          "scope": 25490,
                          "src": "27289:18:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PlonkProver_$24815",
                            "typeString": "contract PlonkProver"
                          },
                          "typeName": {
                            "id": 25466,
                            "name": "PlonkProver",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 24815,
                            "src": "27289:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PlonkProver_$24815",
                              "typeString": "contract PlonkProver"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25471,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "27310:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PlonkProver_$24815_$",
                            "typeString": "function () returns (contract PlonkProver)"
                          },
                          "typeName": {
                            "id": 25468,
                            "name": "PlonkProver",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 24815,
                            "src": "27314:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PlonkProver_$24815",
                              "typeString": "contract PlonkProver"
                            }
                          }
                        },
                        "id": 25470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27310:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PlonkProver_$24815",
                          "typeString": "contract PlonkProver"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "27289:38:12"
                    },
                    {
                      "assignments": [
                        25473
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25473,
                          "mutability": "mutable",
                          "name": "proof",
                          "nodeType": "VariableDeclaration",
                          "scope": 25490,
                          "src": "27342:18:12",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 25472,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "27342:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25480,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 25476,
                            "name": "froms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24928,
                            "src": "27380:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                              "typeString": "address[4] memory"
                            }
                          },
                          {
                            "id": 25477,
                            "name": "tos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24932,
                            "src": "27387:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                              "typeString": "address[4] memory"
                            }
                          },
                          {
                            "id": 25478,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24936,
                            "src": "27392:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                              "typeString": "address[4] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                              "typeString": "address[4] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "expression": {
                            "id": 25474,
                            "name": "prover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25467,
                            "src": "27363:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PlonkProver_$24815",
                              "typeString": "contract PlonkProver"
                            }
                          },
                          "id": 25475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fullProve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24708,
                          "src": "27363:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$4_memory_ptr_$_t_array$_t_address_$4_memory_ptr_$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address[4] memory,address[4] memory,uint256[4] memory) external returns (bytes memory)"
                          }
                        },
                        "id": 25479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27363:36:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "27342:57:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 25484,
                                "name": "stateTree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24839,
                                "src": "27429:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                  "typeString": "contract MerkleTreeWithHistoryMock"
                                }
                              },
                              "id": 25485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getLastRoot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23502,
                              "src": "27429:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view external returns (bytes32)"
                              }
                            },
                            "id": 25486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27429:23:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 25487,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25473,
                            "src": "27454:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 25481,
                            "name": "rollup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24837,
                            "src": "27414:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Rollup_$24542",
                              "typeString": "contract Rollup"
                            }
                          },
                          "id": 25483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24418,
                          "src": "27414:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,bytes memory) external"
                          }
                        },
                        "id": 25488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27414:46:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25489,
                      "nodeType": "ExpressionStatement",
                      "src": "27414:46:12"
                    }
                  ]
                },
                {
                  "body": {
                    "id": 25545,
                    "nodeType": "Block",
                    "src": "27585:369:12",
                    "statements": [
                      {
                        "assignments": [
                          25504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25504,
                            "mutability": "mutable",
                            "name": "pathElements",
                            "nodeType": "VariableDeclaration",
                            "scope": 25545,
                            "src": "27599:29:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25502,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "27599:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25503,
                              "nodeType": "ArrayTypeName",
                              "src": "27599:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25510,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 25508,
                              "name": "LEVELS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24827,
                              "src": "27645:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 25507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "27631:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25505,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "27635:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25506,
                              "nodeType": "ArrayTypeName",
                              "src": "27635:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 25509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27631:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27599:53:12"
                      },
                      {
                        "assignments": [
                          25515
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25515,
                            "mutability": "mutable",
                            "name": "pathIndices",
                            "nodeType": "VariableDeclaration",
                            "scope": 25545,
                            "src": "27666:25:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25513,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "27666:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25514,
                              "nodeType": "ArrayTypeName",
                              "src": "27666:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25521,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 25519,
                              "name": "LEVELS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24827,
                              "src": "27705:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 25518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "27694:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25516,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "27698:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 25517,
                              "nodeType": "ArrayTypeName",
                              "src": "27698:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 25520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27694:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27666:46:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "50726f766964656420726f6f7420646f6573206e6f74206d6174636820726573756c74",
                              "id": 25525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27743:37:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8817b880da87f35073e8a41fb12a2629050c52f0cba09aa22af3fd92debbef",
                                "typeString": "literal_string \"Provided root does not match result\""
                              },
                              "value": "Provided root does not match result"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8817b880da87f35073e8a41fb12a2629050c52f0cba09aa22af3fd92debbef",
                                "typeString": "literal_string \"Provided root does not match result\""
                              }
                            ],
                            "expression": {
                              "id": 25522,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "27727:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$7007",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6508,
                            "src": "27727:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 25526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27727:54:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25527,
                        "nodeType": "ExpressionStatement",
                        "src": "27727:54:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 25531,
                                "name": "tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24932,
                                "src": "27828:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                  "typeString": "address[4] memory"
                                }
                              },
                              "id": 25533,
                              "indexExpression": {
                                "id": 25532,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25492,
                                "src": "27832:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27828:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 25534,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24967,
                                  "src": "27852:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                    "typeString": "uint256[4] memory[4] memory"
                                  }
                                },
                                "id": 25536,
                                "indexExpression": {
                                  "id": 25535,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25492,
                                  "src": "27861:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "27852:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                  "typeString": "uint256[4] memory"
                                }
                              },
                              "id": 25540,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25537,
                                  "name": "N",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24832,
                                  "src": "27864:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 25538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27868:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "27864:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27852:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25541,
                              "name": "pathElements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25504,
                              "src": "27888:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "id": 25542,
                              "name": "pathIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25515,
                              "src": "27918:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            ],
                            "expression": {
                              "id": 25528,
                              "name": "rollup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24837,
                              "src": "27795:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Rollup_$24542",
                                "typeString": "contract Rollup"
                              }
                            },
                            "id": 25530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24467,
                            "src": "27795:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes32[] memory,bool[] memory) external"
                            }
                          },
                          "id": 25543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27795:148:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25544,
                        "nodeType": "ExpressionStatement",
                        "src": "27795:148:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25494,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25492,
                      "src": "27573:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 25495,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "27577:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27573:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25546,
                  "initializationExpression": {
                    "assignments": [
                      25492
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25492,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 25546,
                        "src": "27562:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27562:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25493,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27562:9:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "27580:3:12",
                      "subExpression": {
                        "id": 25497,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25492,
                        "src": "27580:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25499,
                    "nodeType": "ExpressionStatement",
                    "src": "27580:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "27557:397:12"
                },
                {
                  "id": 25703,
                  "nodeType": "Block",
                  "src": "28000:1198:12",
                  "statements": [
                    {
                      "assignments": [
                        25551
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25551,
                          "mutability": "mutable",
                          "name": "pathElements",
                          "nodeType": "VariableDeclaration",
                          "scope": 25703,
                          "src": "28014:29:12",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 25549,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "28014:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 25550,
                            "nodeType": "ArrayTypeName",
                            "src": "28014:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25557,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 25555,
                            "name": "LEVELS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24827,
                            "src": "28060:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 25554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "28046:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 25552,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "28050:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 25553,
                            "nodeType": "ArrayTypeName",
                            "src": "28050:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 25556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28046:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "28014:53:12"
                    },
                    {
                      "assignments": [
                        25562
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25562,
                          "mutability": "mutable",
                          "name": "pathIndices",
                          "nodeType": "VariableDeclaration",
                          "scope": 25703,
                          "src": "28081:25:12",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 25560,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "28081:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 25561,
                            "nodeType": "ArrayTypeName",
                            "src": "28081:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                              "typeString": "bool[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25568,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 25566,
                            "name": "LEVELS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24827,
                            "src": "28120:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 25565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "28109:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bool[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 25563,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "28113:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 25564,
                            "nodeType": "ArrayTypeName",
                            "src": "28113:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                              "typeString": "bool[]"
                            }
                          }
                        },
                        "id": 25567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28109:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "28081:46:12"
                    },
                    {
                      "expression": {
                        "id": 25597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 25569,
                            "name": "pathElements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25551,
                            "src": "28142:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 25571,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 25570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28155:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "28142:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 25574,
                                  "name": "stateTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24839,
                                  "src": "28201:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                    "typeString": "contract MerkleTreeWithHistoryMock"
                                  }
                                },
                                "id": 25575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "hasher",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23157,
                                "src": "28201:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHasher_$23149_$",
                                  "typeString": "function () view external returns (contract IHasher)"
                                }
                              },
                              "id": 25576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28201:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHasher_$23149",
                                "typeString": "contract IHasher"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 25581,
                                        "name": "tos",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24932,
                                        "src": "28253:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                          "typeString": "address[4] memory"
                                        }
                                      },
                                      "id": 25583,
                                      "indexExpression": {
                                        "hexValue": "31",
                                        "id": 25582,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "28257:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "28253:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 25580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "28245:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 25579,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "28245:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 25584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "28245:15:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 25578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "28237:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 25577,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "28237:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28237:24:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 25588,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24967,
                                      "src": "28287:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                        "typeString": "uint256[4] memory[4] memory"
                                      }
                                    },
                                    "id": 25590,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 25589,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "28296:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28287:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                      "typeString": "uint256[4] memory"
                                    }
                                  },
                                  "id": 25594,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25593,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 25591,
                                      "name": "N",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24832,
                                      "src": "28299:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 25592,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "28303:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "28299:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "28287:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 25587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "28279:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 25586,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "28279:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28279:27:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IHasher_$23149",
                                "typeString": "contract IHasher"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 25572,
                              "name": "stateTree",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24839,
                              "src": "28160:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                "typeString": "contract MerkleTreeWithHistoryMock"
                              }
                            },
                            "id": 25573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hashLeftRight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23316,
                            "src": "28160:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_contract$_IHasher_$23149_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (contract IHasher,bytes32,bytes32) pure external returns (bytes32)"
                            }
                          },
                          "id": 25596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28160:160:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "28142:178:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 25598,
                      "nodeType": "ExpressionStatement",
                      "src": "28142:178:12"
                    },
                    {
                      "assignments": [
                        25600
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 25600,
                          "mutability": "mutable",
                          "name": "temp",
                          "nodeType": "VariableDeclaration",
                          "scope": 25703,
                          "src": "28335:30:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                            "typeString": "contract MerkleTreeWithHistoryMock"
                          },
                          "typeName": {
                            "id": 25599,
                            "name": "MerkleTreeWithHistoryMock",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 23832,
                            "src": "28335:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                              "typeString": "contract MerkleTreeWithHistoryMock"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 25608,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28415:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 25604,
                                "name": "stateTree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24839,
                                "src": "28434:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                  "typeString": "contract MerkleTreeWithHistoryMock"
                                }
                              },
                              "id": 25605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasher",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23157,
                              "src": "28434:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHasher_$23149_$",
                                "typeString": "function () view external returns (contract IHasher)"
                              }
                            },
                            "id": 25606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28434:18:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHasher_$23149",
                              "typeString": "contract IHasher"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_contract$_IHasher_$23149",
                              "typeString": "contract IHasher"
                            }
                          ],
                          "id": 25602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "28368:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_uint32_$_t_contract$_IHasher_$23149_$returns$_t_contract$_MerkleTreeWithHistoryMock_$23832_$",
                            "typeString": "function (uint32,contract IHasher) returns (contract MerkleTreeWithHistoryMock)"
                          },
                          "typeName": {
                            "id": 25601,
                            "name": "MerkleTreeWithHistoryMock",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 23832,
                            "src": "28372:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                              "typeString": "contract MerkleTreeWithHistoryMock"
                            }
                          }
                        },
                        "id": 25607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28368:98:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                          "typeString": "contract MerkleTreeWithHistoryMock"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "28335:131:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 25614,
                                    "name": "stateTree",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24839,
                                    "src": "28555:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                      "typeString": "contract MerkleTreeWithHistoryMock"
                                    }
                                  },
                                  "id": 25615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hasher",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23157,
                                  "src": "28555:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHasher_$23149_$",
                                    "typeString": "function () view external returns (contract IHasher)"
                                  }
                                },
                                "id": 25616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28555:18:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHasher_$23149",
                                  "typeString": "contract IHasher"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 25621,
                                          "name": "tos",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24932,
                                          "src": "28611:3:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                            "typeString": "address[4] memory"
                                          }
                                        },
                                        "id": 25623,
                                        "indexExpression": {
                                          "hexValue": "32",
                                          "id": 25622,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "28615:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "28611:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 25620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "28603:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 25619,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "28603:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 25624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "28603:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 25618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28595:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 25617,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28595:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28595:24:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 25628,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24967,
                                        "src": "28649:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                          "typeString": "uint256[4] memory[4] memory"
                                        }
                                      },
                                      "id": 25630,
                                      "indexExpression": {
                                        "hexValue": "32",
                                        "id": 25629,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "28658:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "28649:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                        "typeString": "uint256[4] memory"
                                      }
                                    },
                                    "id": 25634,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 25633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 25631,
                                        "name": "N",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24832,
                                        "src": "28661:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 25632,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "28665:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "28661:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28649:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 25627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28641:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 25626,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28641:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28641:27:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IHasher_$23149",
                                  "typeString": "contract IHasher"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 25612,
                                "name": "stateTree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24839,
                                "src": "28510:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                  "typeString": "contract MerkleTreeWithHistoryMock"
                                }
                              },
                              "id": 25613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hashLeftRight",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23316,
                              "src": "28510:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_contract$_IHasher_$23149_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (contract IHasher,bytes32,bytes32) pure external returns (bytes32)"
                              }
                            },
                            "id": 25636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28510:176:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 25609,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25600,
                            "src": "28481:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                              "typeString": "contract MerkleTreeWithHistoryMock"
                            }
                          },
                          "id": 25611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23831,
                          "src": "28481:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) external"
                          }
                        },
                        "id": 25637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28481:219:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25638,
                      "nodeType": "ExpressionStatement",
                      "src": "28481:219:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 25644,
                                    "name": "stateTree",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24839,
                                    "src": "28789:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                      "typeString": "contract MerkleTreeWithHistoryMock"
                                    }
                                  },
                                  "id": 25645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hasher",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23157,
                                  "src": "28789:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHasher_$23149_$",
                                    "typeString": "function () view external returns (contract IHasher)"
                                  }
                                },
                                "id": 25646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28789:18:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHasher_$23149",
                                  "typeString": "contract IHasher"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 25651,
                                          "name": "tos",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24932,
                                          "src": "28845:3:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                            "typeString": "address[4] memory"
                                          }
                                        },
                                        "id": 25653,
                                        "indexExpression": {
                                          "hexValue": "33",
                                          "id": 25652,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "28849:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_3_by_1",
                                            "typeString": "int_const 3"
                                          },
                                          "value": "3"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "28845:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 25650,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "28837:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 25649,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "28837:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 25654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "28837:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 25648,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28829:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 25647,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28829:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28829:24:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 25658,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24967,
                                        "src": "28883:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                          "typeString": "uint256[4] memory[4] memory"
                                        }
                                      },
                                      "id": 25660,
                                      "indexExpression": {
                                        "hexValue": "33",
                                        "id": 25659,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "28892:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "28883:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                        "typeString": "uint256[4] memory"
                                      }
                                    },
                                    "id": 25664,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 25663,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 25661,
                                        "name": "N",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24832,
                                        "src": "28895:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 25662,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "28899:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "28895:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28883:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 25657,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28875:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 25656,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28875:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28875:27:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IHasher_$23149",
                                  "typeString": "contract IHasher"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 25642,
                                "name": "stateTree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24839,
                                "src": "28744:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                  "typeString": "contract MerkleTreeWithHistoryMock"
                                }
                              },
                              "id": 25643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hashLeftRight",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23316,
                              "src": "28744:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_contract$_IHasher_$23149_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (contract IHasher,bytes32,bytes32) pure external returns (bytes32)"
                              }
                            },
                            "id": 25666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28744:176:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 25639,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25600,
                            "src": "28715:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                              "typeString": "contract MerkleTreeWithHistoryMock"
                            }
                          },
                          "id": 25641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23831,
                          "src": "28715:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) external"
                          }
                        },
                        "id": 25667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28715:219:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25668,
                      "nodeType": "ExpressionStatement",
                      "src": "28715:219:12"
                    },
                    {
                      "expression": {
                        "id": 25675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 25669,
                            "name": "pathElements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25551,
                            "src": "28949:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 25671,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 25670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28962:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "28949:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25672,
                              "name": "temp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25600,
                              "src": "28967:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleTreeWithHistoryMock_$23832",
                                "typeString": "contract MerkleTreeWithHistoryMock"
                              }
                            },
                            "id": 25673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLastRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23502,
                            "src": "28967:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view external returns (bytes32)"
                            }
                          },
                          "id": 25674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28967:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "28949:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 25676,
                      "nodeType": "ExpressionStatement",
                      "src": "28949:36:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 25680,
                              "name": "tos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24932,
                              "src": "29014:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                "typeString": "address[4] memory"
                              }
                            },
                            "id": 25682,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 25681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29018:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29014:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 25683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29022:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 25677,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "29000:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7007",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 25679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expectCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6584,
                          "src": "29000:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (address,bytes memory) external"
                          }
                        },
                        "id": 25684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29000:25:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25685,
                      "nodeType": "ExpressionStatement",
                      "src": "29000:25:12"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 25689,
                              "name": "tos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24932,
                              "src": "29072:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                "typeString": "address[4] memory"
                              }
                            },
                            "id": 25691,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 25690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29076:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29072:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 25692,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24967,
                                "src": "29096:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$4_memory_ptr",
                                  "typeString": "uint256[4] memory[4] memory"
                                }
                              },
                              "id": 25694,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29105:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "29096:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            "id": 25698,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 25695,
                                "name": "N",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24832,
                                "src": "29108:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 25696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29112:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "29108:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29096:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 25699,
                            "name": "pathElements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25551,
                            "src": "29132:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 25700,
                            "name": "pathIndices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25562,
                            "src": "29162:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          ],
                          "expression": {
                            "id": 25686,
                            "name": "rollup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24837,
                            "src": "29039:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Rollup_$24542",
                              "typeString": "contract Rollup"
                            }
                          },
                          "id": 25688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24467,
                          "src": "29039:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (address,uint256,bytes32[] memory,bool[] memory) external"
                          }
                        },
                        "id": 25701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29039:148:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 25702,
                      "nodeType": "ExpressionStatement",
                      "src": "29039:148:12"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "ef311d12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRollup",
            "parameters": {
              "id": 24937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24928,
                  "mutability": "mutable",
                  "name": "froms",
                  "nodeType": "VariableDeclaration",
                  "scope": 25705,
                  "src": "23212:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                    "typeString": "address[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24925,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23212:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24927,
                    "length": {
                      "id": 24926,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "23220:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "23212:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$4_storage_ptr",
                      "typeString": "address[4]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24932,
                  "mutability": "mutable",
                  "name": "tos",
                  "nodeType": "VariableDeclaration",
                  "scope": 25705,
                  "src": "23245:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                    "typeString": "address[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24929,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23245:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24931,
                    "length": {
                      "id": 24930,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "23253:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "23245:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$4_storage_ptr",
                      "typeString": "address[4]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24936,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 25705,
                  "src": "23276:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24933,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23276:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24935,
                    "length": {
                      "id": 24934,
                      "name": "N",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24832,
                      "src": "23284:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "23276:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23202:104:12"
            },
            "returnParameters": {
              "id": 24938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23314:0:12"
            },
            "scope": 25706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24823,
              "name": "Test",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4929,
              "src": "253:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Test_$4929",
                "typeString": "contract Test"
              }
            },
            "id": 24824,
            "nodeType": "InheritanceSpecifier",
            "src": "253:4:12"
          }
        ],
        "contractDependencies": [
          1786,
          2048,
          4929,
          23832,
          24542,
          24815
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25706,
          4929,
          2048,
          1786
        ],
        "name": "RollupTest",
        "scope": 25707
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 12
}